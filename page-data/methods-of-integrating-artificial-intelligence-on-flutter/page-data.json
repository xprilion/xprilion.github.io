{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/methods-of-integrating-artificial-intelligence-on-flutter/","result":{"pageContext":{"id":"6571d6c989631b3c87dc448a","node":{"id":"6571d6c989631b3c87dc448a","slug":"methods-of-integrating-artificial-intelligence-on-flutter","url":"https://xprilion.com/methods-of-integrating-artificial-intelligence-on-flutter","title":"Methods of Integrating Artificial Intelligence on Flutter","subtitle":null,"brief":"One of the coolest UI toolkit's for cross-platform applications, Flutter, a Google offering has grown rapidly in popularity over the last few years. While there are speculations about how Flutter could affect the developer ecosystem, with the under-d...","coverImage":null,"content":{"html":"<hr />\n<p>One of the coolest UI toolkit's for cross-platform applications, <a target=\"_blank\" href=\"https://flutter.dev\">Flutter</a>, a Google offering has grown rapidly in popularity over the last few years. While there are speculations about how Flutter could affect the developer ecosystem, with the under-development <a target=\"_blank\" href=\"https://fuchsia.dev\">Fuchsia</a> constantly making observers thrum with excitement, we cannot ignore the uprising of another popular market term - artificial intelligence (AI). This blog discusses the confluence of Flutter with AI!</p>\n<h2 id=\"heading-but-isnt-ai-super-cool\">But isn't AI super cool?</h2>\n<p>Yes, and it's hot as well!</p>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1701959281248/db5d839c-09d3-4a00-8672-d5fedb536add.png\" alt class=\"image--center mx-auto\" /></p>\n<p>Source: <a target=\"_blank\" href=\"/\">Your Truly</a></p>\n<h2 id=\"heading-should-flutter-devs-care-for-ai\">Should Flutter devs care for AI?</h2>\n<blockquote>\n<p>Definitely.</p>\n</blockquote>\n<p>You'll not be the first to ask why you would need AI on mobile apps, or why would you need a unified way of performing machine learning on your business websites and apps. So let me quickly introduce you to some folks who made it big by incorporating machine learning in their business apps -</p>\n<h3 id=\"heading-1-google\">1. Google</h3>\n<p>When we're talking about machine learning and artificial intelligence in general, Google is one of the foremost names that pop up.</p>\n<p>Being as smart as Google is definitely not an easy task for a human. They leveraged the power of AI as one of the earliest players and today, a plethora of Google products such as GMail, Google Assistant, Google Translate and others.</p>\n<h3 id=\"heading-2-netflix\">2. Netflix</h3>\n<p>Remember how tough it is to stop using the Netflix app once you started to explore the infinite treasures in it. each better than the previous? Netflix was one of the early betters on AI, and today, they lead the market of subscription based video streaming which keeps the viewers glued to their screens due to the power of recommendations that it makes.</p>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1701959331263/410cfd75-bf34-4dbc-8981-5d1d201c2b63.png\" alt class=\"image--center mx-auto\" /></p>\n<p>Source: <a target=\"_blank\" href=\"/\">Your Truly Returns</a></p>\n<p>Oh, and, please get your own subscription even if your crush does not ask you for your account. (And tell her to get one too!)</p>\n<hr />\n<p>By now, if you're convinced you do need artificial intelligence on your apps, let's move on to discuss the various methods you have available for making AI enabled apps!</p>\n<h2 id=\"heading-how-do-i-get-ai-on-my-app\">How do I get AI on my app?</h2>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1701959350187/fe13d9d2-4e0d-4696-bf50-27b1b5834453.jpeg\" alt class=\"image--center mx-auto\" /></p>\n<p>Source: <a target=\"_blank\" href=\"/\">Your Truly Again</a></p>\n<p>To integrate machine learning with your mobile apps, you\\'ll need a model in place, and then, a way to call that model. In Flutter, the options you have available for running ML models in apps, at the time of writing this blog, are -</p>\n<ul>\n<li><p>Firebase ML Kit</p>\n</li>\n<li><p>On-device models</p>\n</li>\n<li><p>Models as APIs</p>\n</li>\n</ul>\n<p>Let's try to understand what each of these are, and how you would decide which one you would want.</p>\n<h3 id=\"heading-firebase-ml-kit\">Firebase ML Kit</h3>\n<p>ML Kit is a part of the Firebase suite which allows app developers to quickly import and use machine learing models from the Firebase console. Besides having the ability to host and import custom models (not yet available on Firebase for Flutter), there are a number of readymade state-of-the-art models available on Firebase such as -</p>\n<ul>\n<li><p>Face detection</p>\n</li>\n<li><p>On-device Translation</p>\n</li>\n<li><p>Object detection and tracking</p>\n</li>\n<li><p>Smart Reply, and others that keep getting added to the console!</p>\n</li>\n</ul>\n<p>This method is suitable when your application is using Firebase, or you have a custom model but do not want to host it on your own server setup. It is possible to cache the models hosted on Firebase, and hence this method is also suitable for model which expect regular but not very frequent updates.</p>\n<h3 id=\"heading-on-device-models\">On-device models</h3>\n<p>On device models are very powerful if you want to perform high-speed inference directly on the devices of the app users. A very popular way of creating such models is to first create them as TensorFlow models, and then to export them as <code>.tflite</code> files. You can then use the ML Kit plugin in your Flutter app to import from within the project repository the stored <code>.tflite</code> file and run it for inference.</p>\n<p>You can find a sample Flutter application using the Face detection model available on Firebase, by first downloading it and then using it as an on-device model <a target=\"_blank\" href=\"https://github.com/PacktPublishing/Mobile-Deep-Learning-Projects/tree/master/Chapter2/flutter_face_detection\">here</a>.</p>\n<blockquote>\n<p>The code in the sample repository given above has been detailed in <em>Chapter 2: Mobile Vision - Face Detection Using On-Device Models</em> of my book <a target=\"_blank\" href=\"https://www.packtpub.com/data/mobile-deep-learning-projects\">Mobile Deep Learning with TensorFlow Lite, ML Kit and Flutter</a>.</p>\n</blockquote>\n<p>This method is most suitable when you want your app users to experience no lag in the time it takes the model to perform inference, and are also confident that the model will not require rapid updates.</p>\n<h3 id=\"heading-models-as-apis\">Models as APIs</h3>\n<p>This is another very popular method of integrating machine learning with apps. In this method, we wrap the model in an API service and host it using web based servers. These servers could be popular platforms like AWS Lambda, Google App Engine, Heroku or Virtual Machines with a runtime that supports running the model and serving it as a web based service.</p>\n<p>This method is best suitable when you're comfortable with working with servers and web interfaces, and also expect the model to update very frequently.</p>\n<p>I shall be discussing this method in details in the future blogs.</p>\n"},"publishedAt":"2020-04-16T06:30:00.000Z","seo":{"title":"1587052142384","description":null},"tags":[{"slug":"blog"}]}}},"staticQueryHashes":[],"slicesMap":{}}