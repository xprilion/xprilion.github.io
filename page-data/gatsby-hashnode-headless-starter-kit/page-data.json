{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/gatsby-hashnode-headless-starter-kit/","result":{"pageContext":{"id":"65bdcea8799c8945f79074e2","node":{"id":"65bdcea8799c8945f79074e2","slug":"gatsby-hashnode-headless-starter-kit","url":"https://xprilion.com/gatsby-hashnode-headless-starter-kit","title":"Revamping my blog with Hashnode Headless CMS","subtitle":null,"brief":"This blog has been written for the Hashnode Headless API Hackathon and the Gatsby + Hashnode Headless + Typescript is publicly available at - https://github.com/xprilion/gatsby-hashnode-headless\nSince 2019, when I switched to a minimal content layout...","coverImage":{"url":"https://cdn.hashnode.com/res/hashnode/image/upload/v1706935513932/aa9ff004-d8de-4f55-9201-7289d30fb6e6.jpeg"},"content":{"html":"<p>This blog has been written for the Hashnode Headless API Hackathon and the Gatsby + Hashnode Headless + Typescript is publicly available at - <a target=\"_blank\" href=\"https://github.com/xprilion/gatsby-hashnode-headless\">https://github.com/xprilion/gatsby-hashnode-headless</a></p>\n<p>Since 2019, when I switched to a minimal content layout for my website, I dreamt of creating a lot of content on the site. However, that was not the story that unfolded after the revamp. What went wrong?</p>\n<p>I am someone who focuses a lot on the value of the knowledge that is being offered through the content I create. What that means is - I love writing detailed blogs discussing mix of technologies. However, at the same time I love sharing my own feelings on various social topics through the blog and here lies the challenge - a blog that renders markdown files gets very tedious to maintain very quickly when you are working on different types of blogs at the same time.</p>\n<p>I was creating a lot of markdown files on my local and would forget all about them later. I was not able to keep track of the content I was creating and could not edit this content from any device other than my laptop.</p>\n<p>In 2023, I was came across Hashnode. I loved the simplicity of writing blogs on the platform and was amazed by the on-spot optimizations done by the team on each blog page. It was the perfect writing companion for me. Unfortunately, I had invested a good amount in my own website over the years and had a strict adherence to the absolutely minimal layout. This was tough to achieve with Hashnode, and hence, it was still not the solution to my problem.</p>\n<h2 id=\"heading-introducing-hashnode-headless\">Introducing Hashnode Headless</h2>\n<p>In later 2023, I was introduced to an upcoming Headless mode of Hashnode. This was super exciting for me and I decided to wait. The day Hashnode headless launched, I headed over to the feature page at <a target=\"_blank\" href=\"https://hashnode.com/headless\">https://hashnode.com/headless</a> and then explored the APIs at <a target=\"_blank\" href=\"https://gql.hashnode.com/\">https://gql.hashnode.com/</a>.</p>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1706936277634/7e4d23d1-8624-4df1-8478-a104fde3f5c5.png\" alt class=\"image--center mx-auto\" /></p>\n<p>After a brief scouring I had realized - I had hit jackpot!</p>\n<p>Using Hashnode headless, I could keep the extreme customization I had built along with the powerful blog creation process available on Hashnode.</p>\n<p>A simple query could fetch my blogs safely from my Hashnode account in either HTML or Markdown format, as I needed it!</p>\n<pre><code class=\"lang-bash\">query Publication {\n  publication(host: <span class=\"hljs-string\">\"xprilion.hashnode.dev\"</span>) {\n    isTeam\n    title\n    posts(first: 20) {\n      edges {\n        node {\n          id\n          title\n          brief\n          url\n          tags {\n            slug\n          }\n          coverImage {\n            url\n          }\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<p>There was however the challenge of fetching all my blogs from the GQL API, which was limited to 20 blogs in a go. This was easily solved by using a paginated query, with powerful support for pagination from Hashnode's GQL server.</p>\n<pre><code class=\"lang-bash\">      pageInfo {\n        endCursor\n        hasNextPage\n      }\n</code></pre>\n<p>And finally, I needed to display different types of content on the blog. For this, I used tags on the blog settings to figure out what sort of layout I need to render for that blog entry. Using this, I was able to render the same markdown content as a Blog, a Codelab and a Presentation at the same time!</p>\n<p>Here's the link to the full query - <a target=\"_blank\" href=\"https://github.com/xprilion/gatsby-hashnode-headless/blob/main/gatsby-node.ts\">https://github.com/xprilion/gatsby-hashnode-headless/blob/main/gatsby-node.ts</a></p>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1706936725933/c19f8bdc-c292-45ce-b8cd-57379bc92a0a.png\" alt class=\"image--center mx-auto\" /></p>\n<p>Hashnode headless was solving every issue I had. However, there was a tiny problem yet to be solved.</p>\n<p>I had to manually redeploy the repo whenever I created or edited any blog on Hashnode. This was definitely not going to fly for the amount of freedom I wanted.</p>\n<h2 id=\"heading-deploy-to-github-pages-from-hashnode\">Deploy to Github Pages from Hashnode</h2>\n<p>This was unfortunately a paid feature. But...I am a developer, right? :D Yes I needed to auto-deploy from my Hashnode blog to my website. There was a simple solution.</p>\n<p>Hashnode has an amazing feature of Webhooks. Using Webhooks, I could trigger actions on an external endpoint. However, this was as of yet not my solution. The webhooks here were in a format which doesn't work directly with Github.</p>\n<p>What could be done?</p>\n<p>Here's the architecture of the solution I built for this:</p>\n<p><img src=\"https://cdn.hashnode.com/res/hashnode/image/upload/v1706937435535/2402b6bc-7634-4c21-8935-1bacbde21474.png\" alt class=\"image--center mx-auto\" /></p>\n<p>The Google Cloud Function code I wrote for this is available at - <a target=\"_blank\" href=\"https://github.com/xprilion/google-cloud-functions-trigger-github-action/tree/hashnode-trigger\">https://github.com/xprilion/google-cloud-functions-trigger-github-action/tree/hashnode-trigger</a></p>\n<p>The Github Actions workflow file I used for this is available at - <a target=\"_blank\" href=\"https://github.com/xprilion/gatsby-hashnode-headless/blob/main/.github/workflows/deploy.yml\">https://github.com/xprilion/gatsby-hashnode-headless/blob/main/.github/workflows/deploy.yml</a></p>\n<h2 id=\"heading-success\">Success</h2>\n<p>With all the setup put together - I now have an extremely customized website hosted at https://xprilion.com (Also where you are reading this!) which deploys automatically from Hashnode (this blog was auto-deployed!)</p>\n<p>I am using Listmonk for newsletter, Cusdis for comments.</p>\n<p>And this blog is a entry for the Hashnode Headless API Hackathon! <a target=\"_blank\" href=\"https://hashnode.com/n/apihackathon\">#APIHackathon</a></p>\n"},"publishedAt":"2024-02-03T05:27:04.447Z","seo":{"title":null,"description":null},"tags":[{"slug":"blog"},{"slug":"apihackathon"}]}}},"staticQueryHashes":[],"slicesMap":{}}