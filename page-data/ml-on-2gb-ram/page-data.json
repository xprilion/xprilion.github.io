{"componentChunkName":"component---src-templates-blog-post-js","path":"/ml-on-2gb-ram/","result":{"data":{"site":{"siteMetadata":{"title":"xprilion's blog","author":"Anubhav Singh","siteUrl":"https://xprilion.com"}},"markdownRemark":{"id":"0e7d7df7-8ef4-5bca-8001-d460c61c9947","excerpt":"If you think you read the title, or maybe I typed it wrong, you’re wrong in both cases. The title proposes an article about performing machine learning with the…","html":"<p>If you think you read the title, or maybe I typed it wrong, you’re wrong in both cases. The title proposes an article about performing machine learning with the bare minimmum RAM usage, and that’s what this article is going to be about.\n<br></p>\n<p>You might think I am joking. Maybe that’s what my life felt like when I did actually survive performing ML on a 2GB RAM laptop. However, I learned much from that phase, and have used those learnings till today to make decisions while choosing the right amount of RAM I would need for running my ML models.\n<br></p>\n<p><img src=\"/images/2020/April/am-i-a-joke-to-you.jpg\" alt=\"Meme Am I a Joke to you\">\n<br></p>\n<p>I am in no manner an expert of advicing about RAM requirements of applications, neither will I attempt to do so. What I share in this blog are simple observationsal learnings which I believe can be helpful at times.\n<br></p>\n<p>Enough prologue, let’s dive in!</p>\n<h2>So, how did you do it?</h2>\n<p><img src=\"/images/2020/April/its-magic.jpg\" alt=\"Its Magic Meme\">\n<br></p>\n<p>Okay, it’s not magic.\n<br></p>\n<p>Rather, I found out all possible ways to reduce the amount of RAM the forever running processes on my laptop were consuming. That left more power for the ML models to run! For this, I had to trim down the list of applications I needed to run parallely on the laptop.\n<br></p>\n<p>It can get confusing and tough to choose the ‘right set of applications’ you need.\n<br></p>\n<h2>How do I decide what applications I need?</h2>\n<p>If you do not have a definite plan and list of requirements that you have from your system, it can be tough to choose the applications you need to run parallely.\n<br></p>\n<p>In my case, I needed to run machine learning models, but I also had a daily limit on the Internet bandwidth available to me. I had two choices -\n<br></p>\n<p><img src=\"/images/2020/April/local-vs-cloud-ml.jpeg\" alt=\"ML on Local Vs Cloud\">\n<br></p>\n<p>I could choose to run my ML models locally and save on the daily limit on my Internet. But then I would have to spend on buying an extension for the RAM. Or I could run the models online and find a way to minimize my Internet consumption.\n<br></p>\n<p>This is a story of how I chose the latter option, and never looked back.\n<br></p>\n<blockquote>\n<p>Also, it is a short reminder that decisions made by developers often revolve around financial constraints and that’s <strong>okay</strong>.</p>\n</blockquote>\n<p>Once you have laid down all your needs and constraints very clearly before yourself, you’ll find it simple to sort things out. Try putting them on a paper! :)</p>\n<h2>What applications did I choose?</h2>\n<p>After more decisions like the example above, my list of requirements boiled down to the following -\n<br></p>\n<h3>1. A minimal Linux desktop</h3>\n<p>For this I chose <a href=\"https://wiki.lxde.org/en/Main_Page\">LXDE</a> which in its default installation contained the <a href=\"https://wiki.lxde.org/en/Openbox\">Openbox</a> desktop environment. It is super minimal, only offering me with a black screen and a menu to get things done in the most frills-away manner.\n<br></p>\n<p>With this choice, I immediately dropped the RAM usage by the default applications on my system to something around 200-300 MBs. I still had almost 6x the amount of that RAM to play with!</p>\n<h3>2. A code editor that didn’t do what I did not ask it to</h3>\n<p>While you may love your favorite code editor, it is worthwhile to check the amount of resources it is eating on your system. With <a href=\"https://www.spyder-ide.org/\">Spyder</a>, I felt power, but that power felt sluggish.\n<br></p>\n<p>As a replacement to Spyder, I chose to use <a href=\"https://colab.research.google.com/\">Google Colaboratory</a> (we’ll talk about this again) in the browser and for non-ML related tasks, I chose <a href=\"https://www.sublimetext.com/3\">Sublime Text</a>.\n<br></p>\n<p>Sublime Text gave me a barebones editor with a few cool things, which didn’t eat away at the RAM. Hence, leaving me enough free RAM to run a browser!</p>\n<h3>3. A browser that was modern and fast</h3>\n<p>Now this is where you may doubt my choice - I chose <a href=\"https://www.google.com/chrome/\">Google Chrome</a> as my only browser on the system.\n<br></p>\n<p>Yes, it did consume a lot of RAM. But at the same time, it offered me superb support for Colaboratory which I was going to use for running my ML models. The decision was simple.\n<br></p>\n<p>A habit of minimal Chrome tab usage was developed. I still obsessively close tabs which I do not need.</p>\n<h2>Is that all?</h2>\n<p>Yeah, that’s pretty much all the setup you’ll need to start using your old dusty laptop for machine learning experiments!\n<br></p>\n<p><img src=\"/images/2020/April/thats-all-folks.jpg\" alt=\"That&#x27;s all folks\">\n<br></p>\n<p>Actually, we can have the questions in the comments below.</p>\n<h2>What did you learn today</h2>\n<p>Today, in under 3 minutes you went through my then painful story of how I started my machine learning exploration on a 2GB RAM machine back in 2016. I hope this inspires you to crunch more results out of your current laptop!\n<br></p>\n<p>I’ll post more on this blog soon! Bookmark my site to stay tuned!</p>\n<h3>About me</h3>\n<p><i>I am a web developer turned machine learning explorer who loves mixing and matching various stacks! I lead the team at <a href=\"https://github.com/thecodefoundation\">The Code Foundation</a> and we love solving problems about computer vision and NLP!\n<br></p>\n<p>Send me a hi on <a href=\"mailto:hi@xpri.dev\">hi@xpri.dev</a>\n</i></p>","frontmatter":{"title":"Machine Learning On 2GB RAM","date":"April 28, 2020","comments":true}}},"pageContext":{"slug":"/ml-on-2gb-ram/","previous":{"fields":{"slug":"/methods-of-integrating-artificial-intelligence-on-flutter/"},"frontmatter":{"title":"Methods of Integrating Artificial Intelligence on Flutter"}},"next":{"fields":{"slug":"/generic-mongodb-wrapper-using-flask-pymongo/"},"frontmatter":{"title":"A Generic MongoDB Wrapper API with Flask and PyMongo"}}}},"staticQueryHashes":["1296475691","3128451518"]}