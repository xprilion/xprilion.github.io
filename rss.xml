<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[xprilion's blog]]></title><description><![CDATA[Anubhav writing about fancy things pretending they're important. Might write about Machine learning or Web development or random tech topics as per mood.]]></description><link>https://xprilion.com</link><generator>GatsbyJS</generator><lastBuildDate>Mon, 17 Oct 2022 16:33:13 GMT</lastBuildDate><item><title><![CDATA[About]]></title><description><![CDATA[About Me]]></description><link>https://xprilion.com/about/</link><guid isPermaLink="false">https://xprilion.com/about/</guid><content:encoded>&lt;p&gt;About Me&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Now]]></title><description><![CDATA[What am I doing now?]]></description><link>https://xprilion.com/now/</link><guid isPermaLink="false">https://xprilion.com/now/</guid><content:encoded>&lt;p&gt;What am I doing now?&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Projects]]></title><description><![CDATA[Some of the best projects I have worked on, are listed here. Open Source Projects which I’ve contributed to as an open source contributor…]]></description><link>https://xprilion.com/projects/</link><guid isPermaLink="false">https://xprilion.com/projects/</guid><content:encoded>&lt;p&gt;Some of the best projects I have worked on, are listed here.&lt;/p&gt;
&lt;h2&gt;Open Source&lt;/h2&gt;
&lt;p&gt;Projects which I’ve contributed to as an open source contributor - &lt;/p&gt;
&lt;h3&gt;Submitty (&lt;a href=&quot;https://github.com/submitty/Submitty&quot;&gt;GitHub&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;I contributed to this project as a part of my Google Summer of Code 2019 program. Submitty is an open source programming assignment submission system from the Rensselaer Center for Open Source Software (RCOS), launched by the Department of Computer Science at Rensselaer Polytechnic Institute.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Features I worked on&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Refactoring Forum Templates to work with Twig&lt;/li&gt;
&lt;li&gt;Solving VPAT Issues to make the website more accessible&lt;/li&gt;
&lt;li&gt;Add AJAX to the Forum&lt;/li&gt;
&lt;li&gt;Add WebSocket to the Forum and Notifications
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Technology&lt;/strong&gt;
PHP, PostgreSQL, Python, JavaScript, Shell
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;My GSoC Report&lt;/strong&gt;
A detailed summary of my contribution to the project can be found here - &lt;a href=&quot;https://submitty.org/developer/google_summer_of_code/2019_AnubhavSingh&quot;&gt;Anubhav GSoC Report&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;hr&gt;
&lt;h2&gt;Own Projects&lt;/h2&gt;
&lt;p&gt;The projects that were my own initiatives, sometimes done in collaboration with fellow developers - &lt;/p&gt;
&lt;h3&gt;Aify.JS (&lt;a href=&quot;https://github.com/aifyjs/how-to&quot;&gt;GitHub&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;Aify.js is a library which when embedded on your web page, can quickly add the power of AI to your website in the form of several features, without you having to invest in any backend or machine learning costs.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Captioning for images on page&lt;/li&gt;
&lt;li&gt;Label determination for page elements&lt;/li&gt;
&lt;li&gt;Web page short summary&lt;/li&gt;
&lt;li&gt;Voice UX&lt;/li&gt;
&lt;li&gt;Browser Extension
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Technology&lt;/strong&gt;
Python (Django), PyTorch, Tesseract OCR, JavaScript (ES6), Google Cloud Platform, DialogFlow
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Collaborators&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ayush Thakur (&lt;a href=&quot;https://github.com/ayulockin&quot;&gt;@ayulockin&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;iunv.in (&lt;a href=&quot;https://github.com/xprilion/iunvin&quot;&gt;GitHub&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;iunv was a built from scratch social network and search engine which during the time of its operation in 2012-2014 ranked among the top 500 websites in India. The social network hosted more than 60k users and over 1 million activities on the platform were recorded.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Worldwide search&lt;/li&gt;
&lt;li&gt;Instant Messaging&lt;/li&gt;
&lt;li&gt;Social features&lt;/li&gt;
&lt;li&gt;Video sharing
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Technology&lt;/strong&gt;
PHP, MySQL, WebSockets, Web Crawler, Job Automation&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;RL-based traffic resolution (&lt;a href=&quot;https://github.com/xprilion/enginx&quot;&gt;GitHub&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;Built for a contest by TATA Consultancy Services, the project won the 2nd runner’s up award, presenting a novel method of quickly resovling the traffic of a city by controlling the traffic light timings. The allgorithm was designed to adapt itself to the varying traffic intensity during the day, week and other special occasions.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Reinforcement learning&lt;/li&gt;
&lt;li&gt;Image processing&lt;/li&gt;
&lt;li&gt;Internet of Things based solution
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Technology&lt;/strong&gt;
PHP, MySQL, REST APIs, Python
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Collaborators&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ayush Thakur (&lt;a href=&quot;https://github.com/ayulockin&quot;&gt;@ayulockin&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;DistPano (&lt;a href=&quot;https://github.com/xprilion/distpano&quot;&gt;GitHub&lt;/a&gt;)&lt;/h3&gt;
&lt;p&gt;Built for a problem statement by the Indian Space Reasearch Organization, DistPano was a distributed computing system for performing image stitching on high resolution geo images using public compute nodes.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Distributed computing&lt;/li&gt;
&lt;li&gt;Fault tolerance&lt;/li&gt;
&lt;li&gt;Low network consumpting&lt;/li&gt;
&lt;li&gt;Integrable with BOINC
&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Technology&lt;/strong&gt;
PHP, MySQL, REST APIs, Java, C++, Python
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Collaborators&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mayank Gupta (&lt;a href=&quot;https://github.com/Mayankgbrc&quot;&gt;@Mayankgbrc&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Shreya Paul (&lt;a href=&quot;https://github.com/shreyapaul15&quot;&gt;@shreyapaul15&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Reetika Gautam (&lt;a href=&quot;https://github.com/Reetika12795&quot;&gt;@Reetika12795&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;Amod Kumar (&lt;a href=&quot;https://github.com/xmavericks&quot;&gt;@xmavericks&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Publications]]></title><description><![CDATA[Writing has always been a strong passion within me. Over the years I have written blogs, pieces and books, in a hope that someday they’ll…]]></description><link>https://xprilion.com/publications/</link><guid isPermaLink="false">https://xprilion.com/publications/</guid><content:encoded>&lt;p&gt;Writing has always been a strong passion within me. Over the years I have written blogs, pieces and books, in a hope that someday they’ll help some explorers on their journey towards seeking knowledge. Listed below are some of my writings which are dear to me -&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;Title&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Publisher&lt;/th&gt;
&lt;th align=&quot;right&quot;&gt;Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Paper&lt;/td&gt;
&lt;td&gt;A Novel SNN-ANN based IDS in Cloud Environment&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;IEEE&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://ieeexplore.ieee.org/document/9155705&quot;&gt;IEEE&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Book&lt;/td&gt;
&lt;td&gt;Mobile Deep Learning Projects&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Packt&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://www.amazon.com/dp/B085RF4GDV&quot;&gt;Amazon&lt;/a&gt; · &lt;a href=&quot;https://www.packtpub.com/data/mobile-deep-learning-projects&quot;&gt;Packt&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Book&lt;/td&gt;
&lt;td&gt;Hands-On Python Deep Learning for the Web&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Packt&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://www.amazon.com/dp/B085472LNB&quot;&gt;Amazon&lt;/a&gt; · &lt;a href=&quot;https://www.packtpub.com/data/hands-on-python-deep-learning-for-web&quot;&gt;Packt&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tutorial&lt;/td&gt;
&lt;td&gt;Introduction to Reinforcement Learning&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;DataCamp&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://www.datacamp.com/community/tutorials/introduction-reinforcement-learning&quot;&gt;DataCamp Tutorial&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Tutorial&lt;/td&gt;
&lt;td&gt;How To Set Up a JupyterLab Environment on Ubuntu 18.04&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;DigitalOcean&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-set-up-a-jupyterlab-environment-on-ubuntu-18-04&quot;&gt;DigitalOcean Tutorial&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content:encoded></item><item><title><![CDATA[Talks]]></title><description><![CDATA[I enjoy talking to people about what I have learnt from my experimentations with technology. Sometimes I simply talk about my experiences…]]></description><link>https://xprilion.com/talks/</link><guid isPermaLink="false">https://xprilion.com/talks/</guid><content:encoded>&lt;p&gt;I enjoy talking to people about what I have learnt from my experimentations with technology. Sometimes I simply talk about my experiences and sometimes, I help them learn something new. Here are a few presentations that I have made in some of the community meetups, conferences or events with larger audiences. &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Presentation Title&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Event&lt;/th&gt;
&lt;th align=&quot;right&quot;&gt;Links&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Finding insights in centuries old photos - A Google Cloud AI Story&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;DevFest Mysuru 2022&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://xpri.dev/gcp-nytimes&quot;&gt;Slides&lt;/a&gt; · &lt;a href=&quot;https://youtu.be/BWP8B63g_I0&quot;&gt;Video&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Cloud Costs Optimization: from $1,700 to $150, at 10x the performance&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Google Cloud Community Days 2022 Mumbai, Mysuru&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://xpri.dev/cloud-costs-story&quot;&gt;Slides&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Let’s Design a high availability ML heavy Cloud solution architecture&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Google Cloud Community Days 2022 Indore, Pune&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://xpri.dev/high-availability-ml-system&quot;&gt;Slides&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Build your own EasyCard payment system&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Google I/O Extended Kolkata 2022&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://xpri.dev/build-your-easycard&quot;&gt;Slides&lt;/a&gt; · &lt;a href=&quot;https://github.com/xprilion/KolPay&quot;&gt;GitHub&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Preparing for the future of tech&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Guest Lecture at Sister Nivedita University, 2022&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://xpri.dev/snu-future-of-tech-2022&quot;&gt;Slides&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Introduction to Audio AI&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Google I/O Extended by GDG Jammu, July 2022&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://xpri.dev/gdg-jammu-audio-ai&quot;&gt;Slides&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Introduction to GSoC 2022&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;GDG Sousse, April 2022&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://xpri.dev/gsoc2022&quot;&gt;Slides&lt;/a&gt; · &lt;a href=&quot;https://www.youtube.com/watch?v=bQ56A-pFbzM&quot;&gt;Video&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Up in a flash with Flask!&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;The Python Week by Mehsana Developer Club, 2021&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://xpri.dev/thepythonweek2021&quot;&gt;Slides&lt;/a&gt; · &lt;a href=&quot;https://www.youtube.com/watch?v=NtgBL1j4N0k&quot;&gt;Video&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Building your own SentiBot&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Pie &amp;#x26; AI - Deeplearning.ai Meetup, July 2020&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://xpri.dev/diy-sentibot&quot;&gt;Slides&lt;/a&gt; · &lt;a href=&quot;https://www.youtube.com/watch?v=xeveNWZ6yxA&amp;#x26;t=480s&quot;&gt;Video&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Plan More, Code Less - Building Scalable Solutions&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;DSC OMG 2020&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://xpri.dev/dscomg&quot;&gt;Slides&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A Novel SNN-ANN based IDS in Cloud Environment&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;ICESCS 2020&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vQh1Ei45a5cs84fW8LDIjhILwqze-PTGr1w6nwLAOKF4pAFNJSc2JapvQC3zbFyMJF31G1dZZz-y87M/pub?start=false&amp;#x26;loop=false&amp;#x26;delayms=60000&quot;&gt;Slides&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Linear &amp;#x26; Tree-based Models&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Deeplearning.ai Meetup, May 2020&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://xpri.dev/linear-tree-models&quot;&gt;Slides&lt;/a&gt; · &lt;a href=&quot;https://www.youtube.com/watch?v=wY9vfDebn7w&amp;#x26;t=3241s&quot;&gt;Video&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;AI for Web : Web for AI&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;DevFest Ahmedabad 2019&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vReYwoFJfM3s9m9qiHOPhRnDJrtTSzSD4ux-CivX4NPGILmgwnmpgnZR0n3VO-HIHXf9msbuTiEXBU4/pub?start=false&amp;#x26;loop=false&amp;#x26;delayms=3000&quot;&gt;Slides&lt;/a&gt; · &lt;a href=&quot;https://www.youtube.com/watch?v=ttPsRnKGIxQ&quot;&gt;Video&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Alternatives to Blockchain&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;SillyCon&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vTEgOTQSoTmiH6BpDEU3pyr-Mxwxt3uEPSsLdeHkuPURp1lUMa2gdNK_92JmvPwxRgeQ6RRhNuzOi2s/pub?start=false&amp;#x26;loop=false&amp;#x26;delayms=60000&quot;&gt;Slides&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Integrating ML with Web&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Let’s Build by GDG Kolkata&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vQTzdptZCQLkDscxT97T8aJzylwlVGAKIM-HRIRdx5fmtFU6oSCuNxbfxt-YTfJr7ebfbtc8SAsLGbG/pub?start=false&amp;#x26;loop=false&amp;#x26;delayms=60000&quot;&gt;Slides&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Getting Started with Contributing to Open Source&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Systers TechTalks&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vRCOfScxK9TNcRZfmogk2LCZ1LZIbzu2JOtb8Z3QY76zwlxtR1FbqPG1VvpaQS9iYDAgvApl1Eg1jf9/pub?start=false&amp;#x26;loop=false&amp;#x26;delayms=60000&quot;&gt;Slides&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Introduction to End to End Web Development&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Let’s Talk Web by GDG Kolkata&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vQB7RfdVnPP5s914qK-Ilah2mqLEQUAb2D__YFmTwOdV3PthaED0wplrTvC0kG-pNUnzWE1KkcodpBd/pub?start=false&amp;#x26;loop=false&amp;#x26;delayms=60000&quot;&gt;Slides&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A Peek Into the Future&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Intro To ML by DSC NSEC&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vQBvLCJ1BqkrN8HTJq71p77lIs6WGD-Jk4qdeIf3C9TR3C5D6QBSB4Snkwccjq4D1eA3FnWwlWAXOki/pub?start=false&amp;#x26;loop=false&amp;#x26;delayms=60000&quot;&gt;Slides&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;The Do’s and Don’ts of Building an AI-powered website&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;DevFest Goa 2019&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vQBww5fNA-WtDt8rl1zj41ubGPg3yWn2QH7QBrtWqhQn2cXzJcyk1xh4q1zDxsx-g3wmF-Ax_4oB0Ta/pub?start=false&amp;#x26;loop=false&amp;#x26;delayms=60000&quot;&gt;Slides&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Introduction to Neural Networks&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Seminar at NSEC 2019&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vT9bW9EPkJ6JM0wTDWA37kIG4LwhgyqDfLcVYiwApqBeMKw_-RwingnKTr2zc-DvATIaocPqUdwNcdo/pub?start=false&amp;#x26;loop=false&amp;#x26;delayms=60000&quot;&gt;Slides&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;The Simple Science Of Unsupervised NLP&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;DevFest Kolkata 2018&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vSJdhkRoNhfIN1-Cs9KO5xPrUL-fifhEm6ZoGxNdRbWG9xlQcF_4zdorqejf4f6SOjDi1F7L3m4uAGA/pub?start=false&amp;#x26;loop=false&amp;#x26;delayms=60000&quot;&gt;Slides&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Introduction to Machine Learning&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Equinox by Techno International Batanagar&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://docs.google.com/presentation/d/e/2PACX-1vSVxvDrMtooeTxxiWMrk2hNoCtalTBXeLGF9bgf_OcIkJXVlxuyg2HsZ7eqy2SH4eaalC_FTCf1qMUp/pub?start=false&amp;#x26;loop=false&amp;#x26;delayms=60000&quot;&gt;Slides&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Introduction to Neo4j&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Neo4j Rootalpha Meetup&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;&lt;a href=&quot;https://xpri.dev/neo4j-rootalpha&quot;&gt;Slides&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content:encoded></item><item><title><![CDATA[High Availability ML Deployments on Google Cloud]]></title><description><![CDATA[The average cost of IT downtime is $5,600 per minute.  ~ Gartner Downtimes can be costly. During downtimes, a company may face loss of…]]></description><link>https://xprilion.com/high-availability-ml-deployments/</link><guid isPermaLink="false">https://xprilion.com/high-availability-ml-deployments/</guid><pubDate>Sun, 09 Oct 2022 17:08:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/covers/high-availability-ml-deployments.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The average cost of IT downtime is $5,600 per minute. &lt;/p&gt;
&lt;p&gt;~ Gartner&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Downtimes can be costly. During downtimes, a company may face loss of business, loss of customer trust, loss of reputation in the technical and business community, or even all of these together. Downtimes are not fun, and until it happens to us, we all tend to think it cannot happen to us.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2022/October/haml-1.png&quot; alt=&quot;Downtime meme&quot;&gt;&lt;/p&gt;
&lt;p&gt;What makes the challenge more difficult is the fact that the world is rapidly incorporating more and more Machine learning on the web, and this has led to complexities that did not exist with non-ML software solutions.&lt;/p&gt;
&lt;p&gt;In this blog, we’ll be exploring how to design a machine learning based solution that is highly reliable and does not suffer much when downtimes occur.&lt;/p&gt;
&lt;p&gt;In this 2 part article, we’ll try to find answers to the following questions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;How quickly can your system bounce back from disasters?&lt;/li&gt;
&lt;li&gt;Are your ML deployments resilient?&lt;/li&gt;
&lt;li&gt;When can you call your system architecture “high availability”?&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Part 1 - Undestanding HADR systems&lt;/h2&gt;
&lt;p&gt;Let us begin by understanding a few basics of High Availability Disaster Recovery (HADR) systems. We’ll cover a few key terms and then some common system topologies.&lt;/p&gt;
&lt;h3&gt;Key terms related to HADR systems&lt;/h3&gt;
&lt;p&gt;Key terms that you should know about HADR systems -&lt;/p&gt;
&lt;h4&gt;High Availability&lt;/h4&gt;
&lt;p&gt;High availability (HA) describes the ability of an application to withstand all planned and unplanned outages (a planned outage could be performing a system upgrade) and to provide continuous processing for business-critical applications.&lt;/p&gt;
&lt;h4&gt;Disaster Recovery&lt;/h4&gt;
&lt;p&gt;Disaster recovery (DR) involves a set of policies, tools, and procedures for returning a system, an application, or an entire data center to full operation after a catastrophic interruption. It includes procedures for copying and storing an installed system’s essential data in a secure location, and for recovering that data to restore normalcy of operation.&lt;/p&gt;
&lt;h4&gt;Unplanned downtime&lt;/h4&gt;
&lt;p&gt;Downtime caused by factors which were not introduced on purpose is called unplanned downtime. This can be majorly due to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Human Error&lt;/li&gt;
&lt;li&gt;Software Problems&lt;/li&gt;
&lt;li&gt;Hardware Failure&lt;/li&gt;
&lt;li&gt;Environmental Issues&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;https://media.tenor.com/VYujs2dkFTUAAAAC/gopi-bahu.gif&quot; alt=&quot;Unplanned downtime meme&quot;&gt;&lt;/p&gt;
&lt;h4&gt;Planned downtime&lt;/h4&gt;
&lt;p&gt;The opposite of unplanned downtime.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2022/October/haml-2.png&quot; alt=&quot;Planned downtime meme&quot;&gt;&lt;/p&gt;
&lt;p&gt;Downtimes introduced on purpose, mostly are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;System upgrades&lt;/li&gt;
&lt;li&gt;System repairs&lt;/li&gt;
&lt;li&gt;Restricted access due to business reasons&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Chaos Engineering&lt;/h4&gt;
&lt;p&gt;Chaos engineering is a method of testing distributed software that deliberately introduces failure and faulty scenarios to verify its resilience in the face of random disruptions. These disruptions can cause applications to respond in unpredictable ways and can break under pressure.&lt;/p&gt;
&lt;h4&gt;Resilience&lt;/h4&gt;
&lt;p&gt;The ability of a solution to absorb the impact of a problem in one or more parts of a system, while continuing to provide an acceptable service level to the business customers.&lt;/p&gt;
&lt;h3&gt;Key metrics for analyzing your system design&lt;/h3&gt;
&lt;p&gt;The key metrics used to analyze system designs are - &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Production capacity in and out of region&lt;/li&gt;
&lt;li&gt;Platform availability&lt;/li&gt;
&lt;li&gt;Availability during planned outages&lt;/li&gt;
&lt;li&gt;Failure Impact&lt;/li&gt;
&lt;li&gt;Disaster recovery time&lt;/li&gt;
&lt;li&gt;Incident response time&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next, let’s look at some HADR system topologies, before we compare their metrics.&lt;/p&gt;
&lt;h3&gt;A 30,000ft view of high availability system design&lt;/h3&gt;
&lt;p&gt;HADR systems can be designed with several topologies ranging from simple ones - where you put all your eggs in a single basket - or complex ones - where you devise a fail-safe array of servers. Let us study a couple of them to understand how such topologies look like - &lt;/p&gt;
&lt;p&gt;Consider the following 2-Active topology -&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2022/October/haml-3.png&quot; alt=&quot;2 Active HADR system topology&quot;&gt;&lt;/p&gt;
&lt;p&gt;This topology shows that we provision 3 servers such that during normal operations, 2 servers load balance the traffic coming to the application while a third server stays on standby. This server gets activated in the event of failure of any or all of the active servers.&lt;/p&gt;
&lt;p&gt;An alternative to a 2-Active system topology is a 3-Active topology -&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2022/October/haml-4.png&quot; alt=&quot;3 Active HADR system topology&quot;&gt;&lt;/p&gt;
&lt;p&gt;In this system topology, we provision all three servers as active servers and in event of failure of any server, the other servers load balance the traffic, while the failed servers are brought back up.&lt;/p&gt;
&lt;p&gt;An obvious question here - which of these is better?&lt;/p&gt;
&lt;p&gt;Consider the following chart of metrics comparison for the above two systems against a single Active system -&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2022/October/haml-5.png&quot; alt=&quot;Comparsion chart - single active, 2 active and 3 active system topologies&quot;&gt;&lt;/p&gt;
&lt;p&gt;From the above, it can be said that while 3-active systems gives highest availability and lowest failure impacts, if your application is likely to expect surges, a 2-active system might give you better resilience.&lt;/p&gt;
&lt;p&gt;We shall wrap our discussion about HADR system topologies here. Next, we’ll talk about challenges posed by ML in HADR systems and see a demo of these topologies in action!&lt;/p&gt;
&lt;h2&gt;Part 2 - HADR system challenges by ML deployments and load testing ML-HADR system&lt;/h2&gt;
&lt;p&gt;Machine Learning heavy deployments bring their own set of challenges to any HADR system. ML models can be deployed in several ways, due to which it becomes important for architects designing HADR systems to choose the right deployment strategies for best results.&lt;/p&gt;
&lt;h3&gt;Challenges posed to ML pipelines for high availability&lt;/h3&gt;
&lt;p&gt;Some of the challenges faced with ML deployments for HADR are - &lt;/p&gt;
&lt;h4&gt;What is a good ML deployment?&lt;/h4&gt;
&lt;p&gt;The definition of a good ML deployment changes with who is answering this question. Fir examples -&lt;/p&gt;
&lt;p&gt;Business owners - performs fast inference
Researchers - highest accuracy
Developers - gets built quickly
Q/A engineers - never fails
Investors - sounds cool, brings in the $$&lt;/p&gt;
&lt;h4&gt;Volume of data processed&lt;/h4&gt;
&lt;p&gt;Volume of data can be a major challenge to most ML systems. Too much data and you may be running late at your training and too less of it, your inference suffers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2022/October/haml-8.png&quot; alt=&quot;Volume of data processed&quot;&gt;&lt;/p&gt;
&lt;h4&gt;Quality of data&lt;/h4&gt;
&lt;p&gt;Data quality refers to how informative and complete a given chunk of data is. The lower the data quality, the tougher it is to derive insights from it. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2022/October/haml-6.png&quot; alt=&quot;Volume of data processed&quot;&gt;&lt;/p&gt;
&lt;h4&gt;Model decay&lt;/h4&gt;
&lt;p&gt;The phenomenon in Machine Learning  that leads to predictions made by a model become less accurate over time. Primary reasons for model decay are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data drift&lt;/li&gt;
&lt;li&gt;Concept drift&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Speed of inference against various inputs&lt;/h4&gt;
&lt;p&gt;Speed of inference can change with changing input. If your model performs inference under 1s for most images ranging appx 10MB, what does it do when someone uploads an image of 1GB? Does your system reject the image or does it take down the building?&lt;/p&gt;
&lt;h3&gt;Load testing ML-HADR systems&lt;/h3&gt;
&lt;p&gt;To be updated.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Dividing is Easy, Unite if you can]]></title><description><![CDATA[There’s always an easy option and one that needs courage, patience and a strong will. When I was a kid, every evening, I used to go out to…]]></description><link>https://xprilion.com/divide-vs-unite/</link><guid isPermaLink="false">https://xprilion.com/divide-vs-unite/</guid><pubDate>Fri, 18 Mar 2022 17:08:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/covers/divide-vs-unite.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;There’s always an easy option and one that needs courage, patience and a strong will.&lt;/p&gt;
&lt;p&gt;When I was a kid, every evening, I used to go out to play in a park nearby my home. We were a good mix of kids - boys from several communities and natives of different states. One day, two new kids showed up and asked us if they could play with us. What was unusual about them was that unlike us, they wore shabby clothes, looked malnourished and were visibly shy. For a group of kids who had known each other for years and were mostly from decent households, we had been trained since childhood to avoid playing with anyone who resembled these two newcomers.&lt;/p&gt;
&lt;p&gt;But did we care? Absolutely not. We played together and didn’t give any damn to any of the differentiating factors. We were kids playing in a park and that was our identity. Till this point in this story, I believe I have everyone’s approval. “You did good”, “kids are so pure” and all that feel-good responses are probably what I would get if I ended it here.&lt;/p&gt;
&lt;p&gt;But that would be the easy option. From this point onwards, you will start categorizing me according to your checklist of right and wrong.&lt;/p&gt;
&lt;p&gt;The two kids were from a small community of migrants from Bangladesh and their father was one of the rare few from that community who managed to break free from crushing poverty by landing a good job. If you’re guessing their religion, yes, they were not Hindus, unlike the rest of our group.&lt;/p&gt;
&lt;p&gt;And now, if you count all the differences we had between those two kids and the rest of the group - you’ll realize that differentiating is easy. It is easy to break down people into small groups. We all carry multiple identities all our lives - our name, the place we were born in, the language we speak, the job we do, the religion we practice - just so that people can differentiate us.&lt;/p&gt;
&lt;p&gt;One could argue - all the factors I mentioned above are more about uniting people under a banner than dividing them. And that is true. The smallest and the largest wars in history have been fought only by uniting people under at least two banners. The World Wars saw multiple nations uniting into groups differentiated by ideologies. The world has seen genocides and prolonged oppressions done by differentiating people and uniting the group of people with the oppressing mindset.&lt;/p&gt;
&lt;p&gt;What I wish to convey from the above set of examples is that every time we unite people after dividing them on any basis - we create a separation that people will protect, be jealous about and fight for. Not because they’re wrong - because they believe in the identity that separation provides them. Each person will guard that identity - some with words, some with art and some with arms. Wars will always be fought with all three - words, art and arms.&lt;/p&gt;
&lt;p&gt;But let me not stray into the philosophy of wars and what’s wrong and wrong with them. Coming back to divides and unifications. Let’s look at the tougher option between the two - uniting people.&lt;/p&gt;
&lt;p&gt;Why is uniting people the tougher option? Because it needs the courage to ask people to let go of identity, the patience to deal with the differences within the group and a strong will that needs to be instilled in each member of the group to want to be in that group, letting go of all the factors that can be used to feel different from the rest. We all, as individuals, strive to be unique, to be recognized separately and to be rewarded separately. &lt;/p&gt;
&lt;p&gt;History tells us that every time a major achievement was made by a group of people - it was only after they reduced differences that broke them into smaller groups, came together and united to achieve their goal. These smaller groups had to come together, forgetting the small battles they have had with each other and form that larger group that moved the mountain. They had to learn to respect the differences of the other and find the unifying factor that they were more passionate about than the dividing factors. Every individual in that large group had to give up their most differentiating identities and associate themselves with a more general identity. &lt;/p&gt;
&lt;p&gt;You might think that uniting is what leaders do best. True, that’s why they’re the leaders. Would be fancy to see a leader who doesn’t have a group of people united to follow him. Here’s a question though - are politicians leaders? My answer to it - sometimes. Not all leaders are politicians and not all politicians are leaders. While you may argue that both bring people together to do their bidding - either to achieve a goal or to get a vote, I differentiate them as such - leaders wish to unite people by letting go of differences while a politician tries to unite people by creating divides. A leader takes the tough option, a politician takes the easy one. What about leaders who were also politicians? We are not exactly in the age where leaders just raised an army and got things done. &lt;/p&gt;
&lt;p&gt;Uniting is tough. Letting go of differences is tough. Accepting the other is tough. &lt;strong&gt;You have to be jealously human to not care about any other factor.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;If you’ve reached this point - congratulations! You and I are likely on the same side of the ideological table. If not, feel free to bash me in the comments or think about all that I said. The former is the easy option and the latter being tough, will take your time and effort to constructively argue against my points. The choice lies with you :)&lt;/p&gt;</content:encoded></item><item><title><![CDATA[The Cost of Standing Out]]></title><description><![CDATA[9 years back, on this date, I launched a social network built from scratch. Almost a month later, I added on the same platform a search…]]></description><link>https://xprilion.com/cost-of-standing-out/</link><guid isPermaLink="false">https://xprilion.com/cost-of-standing-out/</guid><pubDate>Wed, 26 May 2021 12:29:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/covers/cost-of-standing-out.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;9 years back, on this date, I launched a social network built from scratch. Almost a month later, I added on the same platform a search engine, again, built from scratch.&lt;/p&gt;
&lt;p&gt;The website gained almost 60,000 users and was soon among the top 1000 websites in India by Alexa traffic rankings (in 2013). Little did I know the value of what I had created back then. Around 1.5 years later, I shut it down to focus on my studies (11th grade).&lt;/p&gt;
&lt;p&gt;While I do regret that I did not have anyone to give me better advice back then, this article touches on a different issue.&lt;/p&gt;
&lt;p&gt;I recall, clearly, that several posts on the social network by some of my schoolmates would troll me, my father (who was a teacher in the school I studied in) and my sister. Many of them on the search engine would search our names accompanied by slangs and abuses.&lt;/p&gt;
&lt;p&gt;I failed to understand why it happened, and I took the pain of seeing this silently, without sharing it with anyone. Yes, we were all too young then to understand cyber-bullying. But were we too young to not feel the pain it caused? And how do you explain what he did wrong to a kid who put in all his heart and soul in creating a platform, which not many at his age could do, which was used to abuse him?&lt;/p&gt;
&lt;p&gt;9 years later, I realize that what those schoolmates did was not because of their hatred towards me, but because they could not digest the fact that someone from among them was trying to stand out of the norm. God bless the rare few of them who found success in their passions, most of those schoolmates today are toiling the 9-5 at companies that will replace them at the first opportunity.&lt;/p&gt;
&lt;p&gt;I do not name anyone here, my intention is not to hold anyone accountable. The message that I do want to pass is - &lt;strong&gt;the next time a kid comes up to you with whatever they’ve created, could be a software, could be a painting or could simply be a cute shape drawn on sand, have the heart to let them have their moment.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Reflecting, I believe that the experience I gained from building the platform back then still holds for me insights I often draw upon. Even today, that kid 9 years back motivates me to not give a single fuck to anyone who tries to hold me back from standing out.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Decoding Propaganda In Memes]]></title><description><![CDATA[Cover art for Decoding Propaganda In Memes Memes - the nice images you see floating around literally everywhere on the Internet these days…]]></description><link>https://xprilion.com/decoding-propaganda-in-memes/</link><guid isPermaLink="false">https://xprilion.com/decoding-propaganda-in-memes/</guid><pubDate>Sun, 11 Oct 2020 12:29:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/covers/decoding-propaganda-in-memes.png&quot; alt=&quot;Cover art for Decoding Propaganda In Memes&quot;&gt;&lt;/p&gt;
&lt;p&gt;Memes - the nice images you see floating around literally everywhere on the Internet these days and the stuff that fuels your social media. Memes began as a source of entertainment - containing jokes and visual additions to the joke which would often add more spice to it. However, memes have evolved in the recent times to deliver a wider range of content - news, opinions, dissent, praises and unfortunately - propaganda and fake information.&lt;/p&gt;
&lt;p&gt;What goes on in your mind when you view a meme which is funny, but is under the hood demeaning to a community or a group of people who believe in something? Have you seen memes which you felt were trying hard to push the ideology of a certain section of people in the society or memes which felt downright an attack on someone?&lt;/p&gt;
&lt;p&gt;Are you able to recognize such memes instantly? Or has it been that you shared a meme which you found funny but someone pointed out its falsehood to you, only after you had already spread it to a good number of people? It is important here to realize that opinion and falsehood are different things. It is crucial to be able to differentiate when you are spreading ideas and when you are being a tool for spreading misinformation by sharing a meme which has a falsehood based bias in it.&lt;/p&gt;
&lt;p&gt;Let’s try to understand the width of the impact that biased memes can have on your day to day life. Consider the following Google Trends chart about how much “political meme” has been searched in the last decade (October 2010 - October 2020) - &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/October/google-trends-chart.png&quot; alt=&quot;Political meme Google Trends&quot;&gt;&lt;/p&gt;
&lt;p&gt;Notice the days when there has been a major spike. You shall observe the spikes happened in the years - 2020, 2016, 2012. What’s common in these years? The US Presidential elections.&lt;/p&gt;
&lt;p&gt;This article, is going to help you with a few pointers which you can keep in mind to realize the bias in memes that you view, in a hope that the next time you share a meme, you’ll have a fair idea about what impact it can have.&lt;/p&gt;
&lt;p&gt;Case #1 - The Positive Propaganda&lt;/p&gt;
&lt;p&gt;Let’s begin on a lighter tone. Propaganda need not always be negative. It could be directed towards creating a genuine positive sentiment for someone/something. Take a look at this one - &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/October/positive-meme.png&quot; alt=&quot;Positive propaganda meme&quot;&gt;&lt;/p&gt;
&lt;p&gt;This one is fairly easy to understand - a happy man. Happiness radiates the presence of no worries and thus, a content person. Now, you might ask yourself who do you see as content - someone who has made good decisions in life? Or is it someone who has a lot of money and does not have to worry about the trivials of life? In short, someone who is successful. &lt;/p&gt;
&lt;p&gt;Thus, if you were to see this meme anywhere, you would take the presented political leader as someone who is successful and does not worry about his opponents.&lt;/p&gt;
&lt;p&gt;In contrast, if I were to present you with the following meme - &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/October/negative-bernie-meme.png&quot; alt=&quot;Negative propaganda meme&quot;&gt;&lt;/p&gt;
&lt;p&gt;Here you find that the same political leader is asking for financial support for his campaigns. While this is a serious and obvious message, it is seen as a moment of weakness. Thus, it was imperative for the opponents to seize opportunity of this moment and turn it into a popular meme, such that every time someone saw this image of the political leader, they would develop a feeling that the leader was weak and would not likely be successful in his campaign.&lt;/p&gt;
&lt;p&gt;Case #2 - Destroying image of organization/person&lt;/p&gt;
&lt;p&gt;Often, memes target a single person or organization. This may be done for several reasons, but often it has happened that this leads to media trials and unfair pressure against an entity which may not have done anything wrong.&lt;/p&gt;
&lt;p&gt;Consider the following meme - &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/October/image-destruction.png&quot; alt=&quot;Image destruction propaganda meme&quot;&gt;&lt;/p&gt;
&lt;p&gt;While it may tickle the bone of some for the implications that the teacher in the meme is actually a terrorist trying to educate the student in terrorist activities, there is an addition of the logo of Khan Academy at 3 places in this meme. This has been done to implicate that Khan Academy is a terrorist organization and the education imparted there is to train terrorists.&lt;/p&gt;
&lt;p&gt;To an uninformed individual, this meme holds the potential to set a negative image of Khan Academy in his/her mind. Further, the meme tries to implicate that any organization starting with the word “Khan” may be a terrorist organization and furthers this point by adding a Muslim skull cap to the student in the meme.&lt;/p&gt;
&lt;p&gt;For those of you who do not know - Khan Academy is one of the most revolutionary ideas that came up in this century and has benefited students all across the globe by offering free education. Several other educational startups sprang up trying to replicate their model with a difference that they would charge money. Khan Academy remains free and unparalleled to the date.&lt;/p&gt;
&lt;p&gt;It is uncomely that such attempt at maligning a beautiful initiative has been made. &lt;/p&gt;
&lt;p&gt;Case #3 - The Hate spreading&lt;/p&gt;
&lt;p&gt;Now let’s look at some more serious type of biases memes can present. Spreading hate is one of the most common acts that memes try to pull of these days. Look at the following memes - &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/October/hate-against-community.png&quot; alt=&quot;Hate spreading meme against community&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/October/hate-against-person.png&quot; alt=&quot;Hate spreading meme against person&quot;&gt;&lt;/p&gt;
&lt;p&gt;In both the above instances, hatred is being spread either in the meme itself or by the caption. The first image is an instance of spreading hatred towards an entire community and further, in the caption it uses a popular provoking slogan which was used by certain political leaders to incite venom towards a larger community in a different situation.&lt;/p&gt;
&lt;p&gt;The other one is a morphed image of a political leader aiming to indignify the individual and thus, weaken the person’s worth in the society. &lt;/p&gt;
&lt;p&gt;Such memes which openly target a certain person or society either within the meme itself or by the accompanying caption tend to be repeatedly promoted by people of the group which benefits by sharing them. Such groups of people who want those memes to become viral will likely post it several times in the same or similar forums and try to use more and more provocative language along with them to incite hot reactions from the opposing groups, thus increasing the reach of their posts.&lt;/p&gt;
&lt;h2&gt;The Checklist of Propaganda Memes&lt;/h2&gt;
&lt;p&gt;Now let me get down to a checklist which can help you identify quickly memes which are trying hard to send down your brain propaganda of their benefit - &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/October/checklist.png&quot; alt=&quot;Checklist to identify propaganda memes&quot;&gt;&lt;/p&gt;
&lt;p&gt;If the meme you are viewing ticks any of the above points, you might want to double check it for propaganda. It may not always be the same, but in most cases you will find evidence of it promoting or discrediting a certain idea, person or community.&lt;/p&gt;
&lt;p&gt;Pages or social media influencers who regularly post such content might be trying to politically or socially influence you into hating or promoting a single idea, political or social figure or community. It might be a wise idea to give such pages an unfollow to make sure that you base your opinions on factual information instead of the idea that is fed to you subconsciously through online propaganda campaigns which in the current date often include memes, popular meme pages, influencers, videos which may seem humorous, etc.&lt;/p&gt;
&lt;p&gt;Remember that your memes have to be entertaining - if it is not funny, it is not a meme, its plain propaganda. Don’t let anyone buy their way into your mental health and influence you to hate someone.&lt;/p&gt;
&lt;p&gt;Be safe online!&lt;/p&gt;
&lt;p&gt;If you have instances of memes which are biased or drive a propaganda, feel free to put them in the comments below with what you think it is trying to do. It would an added case study and definitely help the next reader! :) &lt;/p&gt;</content:encoded></item><item><title><![CDATA[Working with Amazon Keyspaces Cassandra distribution using Python]]></title><description><![CDATA[Cover art for Working with Amazon Keyspaces Cassandra distribution using Python Cassandra is a popular NoSQL database with capabilities to…]]></description><link>https://xprilion.com/python-amazon-keyspaces-cassandra/</link><guid isPermaLink="false">https://xprilion.com/python-amazon-keyspaces-cassandra/</guid><pubDate>Thu, 17 Sep 2020 10:33:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/covers/python-amazon-keyspaces-cassandra.png&quot; alt=&quot;Cover art for Working with Amazon Keyspaces Cassandra distribution using Python&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://cassandra.apache.org/doc/latest/&quot;&gt;Cassandra&lt;/a&gt; is a popular NoSQL database with capabilities to handle massive data by using a distributed array of commodity hardware. After a boring introduction, here’s the fun part - Cassandra is a Facebook contribution to the world of Open Source, having been developed to handle the inbox search feature in Facebook almost a decade ago, and since it has been handed over to the &lt;a href=&quot;https://www.apache.org/&quot;&gt;Apache Software Foundation&lt;/a&gt;, it has been among the top open source projects under the organization.&lt;/p&gt;
&lt;p&gt;Cassandra powers the highly intensive queries in the applications of several major tech players - Instagram, Netflix, Facebook (before replacing it with HBase and further HBase with MyRocks), Twitter (before replacing it with in-house Manhattan), Walmart Labs, CERN, Cisco WebEx, and many more. You can read an extensive praise-o-logy of Cassandra on this &lt;a href=&quot;https://ubuntu.com/blog/apache-cassandra-top-benefits&quot;&gt;Ubuntu blog titled What is Cassandra and why are big tech companies using it?&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;While it can be a hassle to install and maintain a Cassandra database server online, &lt;a href=&quot;https://aws.amazon.com/keyspaces/&quot;&gt;Amazon Keyspaces&lt;/a&gt; offering by Amazon Web Services makes it a no-brainer to use. A similar powerful offering is provided by Datastax by the name &lt;a href=&quot;https://www.datastax.com/products/datastax-astra&quot;&gt;Astra&lt;/a&gt;. Both provide a managed service for Cassandra database which you can readily use both for development and production needs. Big plus - you can try both for free!&lt;/p&gt;
&lt;p&gt;In this tutorial, I shall be moving ahead with Amazon Keyspaces, considering the dearth of a complete example of how to use it on the Internet. You can very easily modify it to work with Datastax Astra.&lt;/p&gt;
&lt;p&gt;First off, before we make any queries, head over to the &lt;a href=&quot;https://console.aws.amazon.com/keyspaces/home&quot;&gt;Amazon Keyspaces dashboard&lt;/a&gt; and create a Keyspace and a sample Table using the Dashboard or the CQL Editor. Both actions being fairly simple, I shall leave it up to you to &lt;a href=&quot;https://docs.aws.amazon.com/keyspaces/latest/devguide/getting-started.ddl.html&quot;&gt;explore how to get it done&lt;/a&gt;. Let’s move ahead with how you can use them with a Python application.&lt;/p&gt;
&lt;p&gt;For convenience, I shall assume that the keyspace you created is named &lt;code class=&quot;language-text&quot;&gt;test_keyspace&lt;/code&gt; and the table is named &lt;code class=&quot;language-text&quot;&gt;users&lt;/code&gt;. The definition for &lt;code class=&quot;language-text&quot;&gt;users&lt;/code&gt; table is expected to be - &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;Column&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Type&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;id&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;uuid&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;name&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;varchar&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;age&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;integer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;city&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;varchar&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You’ll need to download a &lt;a href=&quot;https://www.comodo.com/resources/small-business/digital-certificates.php&quot;&gt;Digital Certificate&lt;/a&gt; provided by Amazon to be able to connect to Keyspaces since the service only connects through TLS. To do so, use the following command in a terminal window - &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; https://www.amazontrust.com/repository/AmazonRootCA1.pem -O&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;br /&gt;
&lt;p&gt;Create a new folder in your working directory named &lt;code class=&quot;language-text&quot;&gt;.cassandra&lt;/code&gt; and move the &lt;code class=&quot;language-text&quot;&gt;AmazonRootCA1.pem&lt;/code&gt; file there. Just cleaning up the working space, tbh, you can keep it wherever you wish, as long as its accessible to your Python script.&lt;/p&gt;
&lt;p&gt;Next, we shall need the &lt;code class=&quot;language-text&quot;&gt;cassandra-driver&lt;/code&gt; library for quick functionality to use Cassandra with Python. Run the following command to install it - &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; cassandra-driver&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;br /&gt;
&lt;p&gt;Now, we shall write a small barebones wrapper object for our connection with Amazon Keyspaces. Create a file called &lt;code class=&quot;language-text&quot;&gt;db.py&lt;/code&gt; in your working directory.&lt;/p&gt;
&lt;p&gt;Add the following code to make all necessary imports - &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; cassandra&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;auth &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; PlainTextAuthProvider
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; cassandra&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cluster &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Cluster
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; ssl &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; SSLContext&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; PROTOCOL_TLSv1_2&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; CERT_REQUIRED
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; cassandra &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; ConsistencyLevel
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; cassandra&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;query &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; SimpleStatement&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;br /&gt;
&lt;p&gt;The above imports indicate a few things - &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;We’re going to be using the &lt;code class=&quot;language-text&quot;&gt;PlainTextAuthProvider&lt;/code&gt; which means at some point we’ll need a username and password combination for our connection with the database. We shall come around this.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Cluster&lt;/code&gt; indicates that we shall be creating an object of the Cassandra Cluster we connect to. This provides cluster level operations which can be useful for you, but not much in the course of this tutorial.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;SSLContext, PROTOCOL_TLSv1_2, CERT_REQUIRED&lt;/code&gt; are all required for making a TLS connection to the Amazon Keyspaces service.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;ConsistencyLevel&lt;/code&gt; if this is a bouncer, we shall get to overcoming it further down in this tutorial.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;SimpleStatement&lt;/code&gt; is a simple CSQL statement, no wonders here. &lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next, let’s begin using these imports.&lt;/p&gt;
&lt;p&gt;Create a class &lt;code class=&quot;language-text&quot;&gt;Cassandra&lt;/code&gt; and add an initialization constructor which creates and connection to the database service - &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Cassandra&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        ssl_context &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; SSLContext&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;PROTOCOL_TLSv1_2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        ssl_context&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;load_verify_locations&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;.cassandra/AmazonRootCA1.pem&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        ssl_context&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;verify_mode &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; CERT_REQUIRED
        auth_provider &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; PlainTextAuthProvider&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            username&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;ServiceUsername&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            password&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;ServicePassword&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cluster &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Cluster&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;cassandra.us-east-1.amazonaws.com&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            ssl_context&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;ssl_context&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            auth_provider&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;auth_provider&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
            port&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;9142&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;session &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;cluster&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;connect&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;test_keyspace&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;br /&gt;
&lt;p&gt;Notice &lt;code class=&quot;language-text&quot;&gt;ServiceUsername&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;ServicePassword&lt;/code&gt;, you do not yet have them. To create a pair of credentials to use, follow this instructions in &lt;a href=&quot;https://docs.aws.amazon.com/keyspaces/latest/devguide/programmatic.credentials.html#programmatic.credentials.ssc&quot;&gt;this tutorial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Your Cluster endpoint (&lt;code class=&quot;language-text&quot;&gt;cassandra.us-east-1.amazonaws.com&lt;/code&gt;) could differ from the one I have used in my example. You can find out your endpoint by visiting &lt;a href=&quot;https://docs.aws.amazon.com/keyspaces/latest/devguide/programmatic.endpoints.html&quot;&gt;this list&lt;/a&gt; and use the endpoint corresponding to your AWS Region.&lt;/p&gt;
&lt;p&gt;Now, let’s create a method for the &lt;code class=&quot;language-text&quot;&gt;Cassandra&lt;/code&gt; class that we can use to execute queries - &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Cassandra&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;self&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; query&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; self&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;execute&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;SimpleStatement&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
                query&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; consistency_level&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;ConsistencyLevel&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;LOCAL_QUORUM&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;br /&gt;
&lt;p&gt;Look, we used the &lt;code class=&quot;language-text&quot;&gt;ConsistencyLevel&lt;/code&gt; object here! What is this bird?&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/September/bird.jpg&quot; alt=&quot;What is this bird?&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Consistency Level&lt;/strong&gt; is the number of nodes which need to confirm that a particular write operation into a Cassandra database is successful. In simpler words, since Cassandra is a distributed database, and the data stored in Cassandra is split over multiple nodes, a single write operation is successful only when maximum possible nodes acknowledge the write operation as valid. For this, we use different consistency levels, some of which are - &lt;code class=&quot;language-text&quot;&gt;LOCAL_ONE&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;LOCAL_QUORUM&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;ALL&lt;/code&gt;, etc. You can read more about consistency levels in &lt;a href=&quot;https://www.geeksforgeeks.org/consistency-levels-in-cassandra/&quot;&gt;this blog by Ashish Rana on GeeksforGeeks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Currently, Amazon Keyspaces works only with the &lt;code class=&quot;language-text&quot;&gt;LOCAL_QUORUM&lt;/code&gt; consistency level.&lt;/p&gt;
&lt;p&gt;Now, we can delve into some action!&lt;/p&gt;
&lt;p&gt;Create a new file called &lt;code class=&quot;language-text&quot;&gt;main.py&lt;/code&gt; (or whatever fancy wording you can think of in 1 second), and put the following lines in it to try inserting a new entry to the database - &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; db &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Cassandra

csql &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Cassandra&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Insert Query&lt;/span&gt;
results &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; csql&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;execute&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&quot;INSERT INTO users &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; age&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; city&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; \
                        VALUES &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;6ab09bec&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;e68e&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;48d9&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;a5f8&lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;97e6fb4c9b47&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; \
                       &lt;span class=&quot;token string&quot;&gt;&apos;John&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Delhi&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&quot;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;br /&gt;
&lt;p&gt;Now, save the file and try executing it from the terminal using the following command - &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;python main.py&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;br /&gt;
&lt;p&gt;If the query is successful, you shall see no errors. &lt;/p&gt;
&lt;p&gt;Let’s try reading the database and see if we’ve got the entry right. Comment out the Insert query code in the &lt;code class=&quot;language-text&quot;&gt;main.py&lt;/code&gt; file and add the following lines - &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Read query&lt;/span&gt;
results &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; csql&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;execute&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;SELECT * FROM users&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;x &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; x &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; results&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;br /&gt;
&lt;p&gt;You should see the output similar to this - &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;[Row(id=UUID(&amp;#39;6ab09bec-e68e-48d9-a5f8-97e6fb4c9b47&amp;#39;), city=&amp;#39;Delhi&amp;#39;, age=24, name=&amp;#39;John&amp;#39;)]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;br /&gt;
&lt;p&gt;If not, you need to observe the error message and try fixing the code! You can find the full code for this tutorial at - &lt;a href=&quot;https://github.com/xprilion/python-amazon-keyspaces&quot;&gt;https://github.com/xprilion/python-amazon-keyspaces&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Cassandra can be a great tool if you’re looking to build highly scalable and mission-critical applications (given you need something like Cassandra, at all) and Amazon Keyspaces makes it very simple and efficient to use and manage.&lt;/p&gt;
&lt;p&gt;It is possible to use Amazon Keyspaces with other backends as well, and I shall leave it for you to explore them at your interest.&lt;/p&gt;
&lt;p&gt;Thanks for reading this!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[A Generic MongoDB Wrapper API with Flask and PyMongo]]></title><description><![CDATA[Hey there, hope you’re well! It’s been a while since I wrote something here, to my defence I wrote this tutorial about How to setup a secure…]]></description><link>https://xprilion.com/generic-mongodb-wrapper-using-flask-pymongo/</link><guid isPermaLink="false">https://xprilion.com/generic-mongodb-wrapper-using-flask-pymongo/</guid><pubDate>Mon, 14 Sep 2020 10:05:00 GMT</pubDate><content:encoded>&lt;p&gt;Hey there, hope you’re well! It’s been a while since I wrote something here, to my defence I wrote this tutorial about &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-set-up-a-jupyterlab-environment-on-ubuntu-18-04&quot;&gt;How to setup a secure, remote JupyterLab workstation&lt;/a&gt; on &lt;a href=&quot;https://digitalocean.com&quot;&gt;DigitalOcean&lt;/a&gt;. Have you not read it yet? Go ahead and explore it if you’re interested in the topic! Now, moving ahead.&lt;/p&gt;
&lt;p&gt;This blog is going to be about creating a generic wrapper API for your MongoDB installation using Flask and PyMongo. If you’ve little idea about what these terms mean, here we go - &lt;/p&gt;
&lt;h2&gt;1. PyMongo and MongoDB&lt;/h2&gt;
&lt;p&gt;When you’re working with the cool &lt;a href=&quot;https://mongodb.com&quot;&gt;MongoDB&lt;/a&gt; using Python, &lt;a href=&quot;https://pymongo.readthedocs.io/en/stable/&quot;&gt;PyMongo&lt;/a&gt; is your go to tool. The distribution facilitates a full fledged support for interacting with MongoDB databases, local or remote and provides a dead simple way of working with it through your Python code.&lt;/p&gt;
&lt;h2&gt;2. Flask&lt;/h2&gt;
&lt;p&gt;A very popular library in Python for creating web sites, often preferred for lightweight tasks and more often for creating API servers quickly, &lt;a href=&quot;https://flask.palletsprojects.com&quot;&gt;Flask&lt;/a&gt; provides a way to have a no-frills web server running in minutes.&lt;/p&gt;
&lt;h2&gt;3. You&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;https://media1.tenor.com/images/07feba4572471b21fd4258b6af83c9c4/tenor.gif&quot; alt=&quot;Who&amp;#x27;s awesome?&quot;&gt;&lt;/p&gt;
&lt;p&gt;A super cool person reading this nice blog for whom I hope I can make the time spent here worth!&lt;/p&gt;
&lt;p&gt;Now that we’re done with the introductions, let’s chalk out a plan that we shall follow in this tutorial. Imagine a situation where you have a MongoDB database with yourselves, and are wondering how to use it for some basic &lt;a href=&quot;https://en.wikipedia.org/wiki/Create,_read,_update_and_delete&quot;&gt;CRUD&lt;/a&gt; operations from a remotely running application. Further, to make things interesting, you’re unsure what collections in the database your application shall need, or it may even need to create arbitrary collections at any moment. Fortunately, you hit upon the golden idea of creating some public APIs to your database server using Flask which allow just those operations with our without some authentication, as per your need. &lt;/p&gt;
&lt;p&gt;While I’m going to leave the (tiny) headache of getting a MongoDB server to you, which you can easily get on many online providers, even for free at some places, I shall begin with the requirements of our API. &lt;/p&gt;
&lt;h2&gt;The specification&lt;/h2&gt;
&lt;p&gt;If you went through the specification of CRUD, you know that we need 4 REST APIs to begin with - &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;Action&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;Method&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;MongoDB&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Parameters&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Endpoint&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Create&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;POST, PUT&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Insert&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;None&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;example.com/table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Read All/One&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;GET&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Find&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;None/Resource ID&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;example.com/table/[id]&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Update&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;POST, PUT, PATCH&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Update&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Resource ID&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;example.com/table/id&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Delete&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;DELETE&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Delete&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Resource ID&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;example.com/table/id&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;The preparation&lt;/h2&gt;
&lt;p&gt;Now, we shall make sure we have some helper code ready for usage, usually to handle any errors on the API or simply to respond to an “are you alive” ping from anywhere remote.&lt;/p&gt;
&lt;p&gt;First off, you’d need the right libraries installed. We shall be using the &lt;code class=&quot;language-text&quot;&gt;flask_pymongo&lt;/code&gt; which is a wrapper around PyMongo with helpers for Flask provided. Besides, we will need the &lt;code class=&quot;language-text&quot;&gt;flask_cors&lt;/code&gt; library to &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS&quot;&gt;allow fetching of resources from a different domain&lt;/a&gt;. &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;pip &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; flask, flask_pymongo, flask_cors&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let’s import these libraries (and others which might be needed) into our script.&lt;/p&gt;
&lt;h3&gt;Step 1: Importing libraries&lt;/h3&gt;
&lt;p&gt;Create a file named &lt;code class=&quot;language-text&quot;&gt;app.py&lt;/code&gt; in your working directory. Add the following lines to import all needed libraries - &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; os
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; flask &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; Flask&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; make_response
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; flask_pymongo &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; PyMongo&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ObjectId
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; flask_cors &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; CORS
&lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; datetime
&lt;span class=&quot;token keyword&quot;&gt;from&lt;/span&gt; bson&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;json_util &lt;span class=&quot;token keyword&quot;&gt;import&lt;/span&gt; dumps&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Step 2: Setup constants, MongoDB connection and helper objects&lt;/h3&gt;
&lt;p&gt;Now, let us define the stuff we shall be needing globally in the code.&lt;/p&gt;
&lt;p&gt;First, let’s create an instance of our Flask app - &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;app &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; Flask&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__name__&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
CORS&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;app&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
APP_ROOT &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; os&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dirname&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;os&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;path&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;abspath&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;__file__&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;code class=&quot;language-text&quot;&gt;CORS(app)&lt;/code&gt; enables CORS for the API we shall run. Next, let’s define some HTTP status code responses we shall be making in the API.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# HTTP status code constants&lt;/span&gt;
HTTP_SUCCESS_GET_OR_UPDATE          &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;
HTTP_SUCCESS_CREATED                &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;201&lt;/span&gt;
HTTP_SUCCESS_DELETED                &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;204&lt;/span&gt;
HTTP_SERVER_ERROR                   &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;500&lt;/span&gt;
HTTP_NOT_FOUND                      &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;404&lt;/span&gt;
HTTP_BAD_REQUEST                    &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;   &lt;span class=&quot;token number&quot;&gt;400&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, create a connection object for PyMongo -&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;config&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;MONGO_URI&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;mongodb://username:password@host:port/database?authSource=admin&quot;&lt;/span&gt;
mongo &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; PyMongo&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;app&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, we shall be creating a helper function that prepares the responses our API makes - &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; status_code&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; make_response&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;dumps&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; status_code&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This function will be responsible for preparing the data before finally giving it out through the API. Sometimes you might want global transforms on all output you’re producing, this is where they go.&lt;/p&gt;
&lt;h2&gt;The real deal&lt;/h2&gt;
&lt;p&gt;Now, we can setup the APIs to wrap around PyMongo. Let us start with the &lt;code class=&quot;language-text&quot;&gt;Create&lt;/code&gt; API.&lt;/p&gt;
&lt;h3&gt;Step 4: Create API&lt;/h3&gt;
&lt;p&gt;In this step, I shall first put out the code for you to study, and then attempt explaining it.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/&amp;lt;collection_name&gt;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; methods&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;POST&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;post_item&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;collection_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;
        Post one item in collection.
    &quot;&quot;&quot;&lt;/span&gt;
    collection &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;getattr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mongo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;db&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; collection_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    formdata &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;json
    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        insert_id &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;collection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;insert_one&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;formdata&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;inserted_id&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        output &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;message&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;new item created&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;_id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; insert_id&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; send&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;output&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; HTTP_SUCCESS_CREATED&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;except&lt;/span&gt; Exception &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        output &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;error&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; send&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;output&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; HTTP_BAD_REQUEST&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the code above, you see that we created a &lt;code class=&quot;language-text&quot;&gt;/&amp;lt;collection_name&amp;gt;&lt;/code&gt; route. This means that we have kept the collection name generic, and whatever collection name is being passed to it, the API will attempt to insert data into it, or if it doesn’t exist yet in the database, it will first create the collection and then insert the item.&lt;/p&gt;
&lt;p&gt;The API returns an &lt;code class=&quot;language-text&quot;&gt;id&lt;/code&gt; which is useful for entry level operations like reading a single entry, updating it or deleting it.&lt;/p&gt;
&lt;h3&gt;Step 5: Read API&lt;/h3&gt;
&lt;p&gt;Next, we shall create an API to read the entries in the collection. There can be two instances of read - one in which you try to read exactly 1 entry and the other where you need all entries. Let us create these.&lt;/p&gt;
&lt;p&gt;First, let’s create an API that returns all items in a collection - &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/&amp;lt;collection_name&gt;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; methods&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;GET&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get_all_items&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;collection_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;
        Documents in a collection.
    &quot;&quot;&quot;&lt;/span&gt;
    collection &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;getattr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mongo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;db&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; collection_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    output &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; q &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; collection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;find&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        output&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;append&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;q&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; send&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;output&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; HTTP_SUCCESS_GET_OR_UPDATE&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, any &lt;code class=&quot;language-text&quot;&gt;GET&lt;/code&gt; request to any &lt;code class=&quot;language-text&quot;&gt;collection_name&lt;/code&gt; will attempt to display all items in that collection. If it does not exist, the API will simply return a blank list, but will not attempt to create the collection.&lt;/p&gt;
&lt;p&gt;Then, let’s create the route to get information about a single entry - &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/&amp;lt;collection_name&gt;/&amp;lt;id&gt;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; methods&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;GET&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;get_one_item&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;collection_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;
        Get one item from a collection.
    &quot;&quot;&quot;&lt;/span&gt;
    collection &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;getattr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mongo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;db&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; collection_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    r &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; collection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;find_one&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;_id&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ObjectId&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; r&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; send&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;r&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; HTTP_SUCCESS_GET_OR_UPDATE&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; send&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;error&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;item not found&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; HTTP_NOT_FOUND&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Notice that the above route accepts both &lt;code class=&quot;language-text&quot;&gt;collection_name&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;id&lt;/code&gt;. This &lt;code class=&quot;language-text&quot;&gt;id&lt;/code&gt; is the one which is returned in the Create API. &lt;/p&gt;
&lt;h3&gt;Step 6: Update API&lt;/h3&gt;
&lt;p&gt;Now, let’s create an API to allow updating one entry at a time. It would need to have both the &lt;code class=&quot;language-text&quot;&gt;collection_name&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;id&lt;/code&gt; parameters and would be accessible by a &lt;code class=&quot;language-text&quot;&gt;PUT&lt;/code&gt; request.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/&amp;lt;collection_name&gt;/&amp;lt;id&gt;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; methods&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;PUT&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;update_item&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;collection_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;
        Update one item in collection.
    &quot;&quot;&quot;&lt;/span&gt;
    collection &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;getattr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mongo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;db&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; collection_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    r &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; collection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;find_one&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;_id&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ObjectId&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; r&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; key &lt;span class=&quot;token keyword&quot;&gt;in&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;json&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;keys&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            r&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;json&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;key&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            collection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;replace_one&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;_id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ObjectId&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; r&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            output &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;message&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;item updated&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; send&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;output&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; HTTP_SUCCESS_GET_OR_UPDATE&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;except&lt;/span&gt; Exception &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            output &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;error&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; send&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;output&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; HTTP_BAD_REQUEST&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        output &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;error&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;item not found&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; send&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;output&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; HTTP_NOT_FOUND&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that before we update the item, we check for its existence. You could skip this behaviour and could create an API which attempts to Create or Update, which is a popular requirement in many use cases.&lt;/p&gt;
&lt;h3&gt;Step 7: Delete API&lt;/h3&gt;
&lt;p&gt;A rather simpler API, the Delete API too needs both the &lt;code class=&quot;language-text&quot;&gt;collection_name&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;id&lt;/code&gt; and listens to the &lt;code class=&quot;language-text&quot;&gt;DELETE&lt;/code&gt; request. &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python&quot;&gt;&lt;pre class=&quot;language-python&quot;&gt;&lt;code class=&quot;language-python&quot;&gt;&lt;span class=&quot;token decorator annotation punctuation&quot;&gt;@app&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;route&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/&amp;lt;collection_name&gt;/&amp;lt;id&gt;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; methods&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;DELETE&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;delete_item&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;collection_name&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;token triple-quoted-string string&quot;&gt;&quot;&quot;&quot;
        Delete one item from collection.
    &quot;&quot;&quot;&lt;/span&gt;
    collection &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;getattr&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mongo&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;db&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; collection_name&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    r &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; collection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;find_one&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;_id&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; ObjectId&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token builtin&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; r&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            collection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;remove&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;r&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;_id&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; send&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; HTTP_SUCCESS_DELETED&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;except&lt;/span&gt; Exception &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; e&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
            output &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;error&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token builtin&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; send&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;output&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; HTTP_BAD_REQUEST&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;
        output &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;error&apos;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;item not found&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; send&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;output&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; HTTP_NOT_FOUND&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;With the above APIs, and any more you might wish to add to it, you can have a simple API wrapper around your MongoDB database which allows you to work with any collection at any moment. To get the full code head over to &lt;a href=&quot;https://github.com/xprilion/generic-pymongo-flask&quot;&gt;https://github.com/xprilion/generic-pymongo-flask&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you read through the code in the &lt;code class=&quot;language-text&quot;&gt;app.py&lt;/code&gt; on the repository you’ll find a few more functions there, which can be a useful addition to your API.&lt;/p&gt;
&lt;p&gt;Thanks for making time for going through this tutorial!&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Machine Learning On 2GB RAM]]></title><description><![CDATA[If you think you read the title, or maybe I typed it wrong, you’re wrong in both cases. The title proposes an article about performing…]]></description><link>https://xprilion.com/ml-on-2gb-ram/</link><guid isPermaLink="false">https://xprilion.com/ml-on-2gb-ram/</guid><pubDate>Tue, 28 Apr 2020 18:20:00 GMT</pubDate><content:encoded>&lt;p&gt;If you think you read the title, or maybe I typed it wrong, you’re wrong in both cases. The title proposes an article about performing machine learning with the bare minimmum RAM usage, and that’s what this article is going to be about.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;You might think I am joking. Maybe that’s what my life felt like when I did actually survive performing ML on a 2GB RAM laptop. However, I learned much from that phase, and have used those learnings till today to make decisions while choosing the right amount of RAM I would need for running my ML models.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/April/am-i-a-joke-to-you.jpg&quot; alt=&quot;Meme Am I a Joke to you&quot;&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I am in no manner an expert of advicing about RAM requirements of applications, neither will I attempt to do so. What I share in this blog are simple observationsal learnings which I believe can be helpful at times.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Enough prologue, let’s dive in!&lt;/p&gt;
&lt;h2&gt;So, how did you do it?&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/April/its-magic.jpg&quot; alt=&quot;Its Magic Meme&quot;&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Okay, it’s not magic.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Rather, I found out all possible ways to reduce the amount of RAM the forever running processes on my laptop were consuming. That left more power for the ML models to run! For this, I had to trim down the list of applications I needed to run parallely on the laptop.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;It can get confusing and tough to choose the ‘right set of applications’ you need.
&lt;br&gt;&lt;/p&gt;
&lt;h2&gt;How do I decide what applications I need?&lt;/h2&gt;
&lt;p&gt;If you do not have a definite plan and list of requirements that you have from your system, it can be tough to choose the applications you need to run parallely.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;In my case, I needed to run machine learning models, but I also had a daily limit on the Internet bandwidth available to me. I had two choices -
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/April/local-vs-cloud-ml.jpeg&quot; alt=&quot;ML on Local Vs Cloud&quot;&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;I could choose to run my ML models locally and save on the daily limit on my Internet. But then I would have to spend on buying an extension for the RAM. Or I could run the models online and find a way to minimize my Internet consumption.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;This is a story of how I chose the latter option, and never looked back.
&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Also, it is a short reminder that decisions made by developers often revolve around financial constraints and that’s &lt;strong&gt;okay&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once you have laid down all your needs and constraints very clearly before yourself, you’ll find it simple to sort things out. Try putting them on a paper! :)&lt;/p&gt;
&lt;h2&gt;What applications did I choose?&lt;/h2&gt;
&lt;p&gt;After more decisions like the example above, my list of requirements boiled down to the following -
&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;1. A minimal Linux desktop&lt;/h3&gt;
&lt;p&gt;For this I chose &lt;a href=&quot;https://wiki.lxde.org/en/Main_Page&quot;&gt;LXDE&lt;/a&gt; which in its default installation contained the &lt;a href=&quot;https://wiki.lxde.org/en/Openbox&quot;&gt;Openbox&lt;/a&gt; desktop environment. It is super minimal, only offering me with a black screen and a menu to get things done in the most frills-away manner.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;With this choice, I immediately dropped the RAM usage by the default applications on my system to something around 200-300 MBs. I still had almost 6x the amount of that RAM to play with!&lt;/p&gt;
&lt;h3&gt;2. A code editor that didn’t do what I did not ask it to&lt;/h3&gt;
&lt;p&gt;While you may love your favorite code editor, it is worthwhile to check the amount of resources it is eating on your system. With &lt;a href=&quot;https://www.spyder-ide.org/&quot;&gt;Spyder&lt;/a&gt;, I felt power, but that power felt sluggish.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;As a replacement to Spyder, I chose to use &lt;a href=&quot;https://colab.research.google.com/&quot;&gt;Google Colaboratory&lt;/a&gt; (we’ll talk about this again) in the browser and for non-ML related tasks, I chose &lt;a href=&quot;https://www.sublimetext.com/3&quot;&gt;Sublime Text&lt;/a&gt;.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Sublime Text gave me a barebones editor with a few cool things, which didn’t eat away at the RAM. Hence, leaving me enough free RAM to run a browser!&lt;/p&gt;
&lt;h3&gt;3. A browser that was modern and fast&lt;/h3&gt;
&lt;p&gt;Now this is where you may doubt my choice - I chose &lt;a href=&quot;https://www.google.com/chrome/&quot;&gt;Google Chrome&lt;/a&gt; as my only browser on the system.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Yes, it did consume a lot of RAM. But at the same time, it offered me superb support for Colaboratory which I was going to use for running my ML models. The decision was simple.
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;A habit of minimal Chrome tab usage was developed. I still obsessively close tabs which I do not need.&lt;/p&gt;
&lt;h2&gt;Is that all?&lt;/h2&gt;
&lt;p&gt;Yeah, that’s pretty much all the setup you’ll need to start using your old dusty laptop for machine learning experiments!
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/April/thats-all-folks.jpg&quot; alt=&quot;That&amp;#x27;s all folks&quot;&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Actually, we can have the questions in the comments below.&lt;/p&gt;
&lt;h2&gt;What did you learn today&lt;/h2&gt;
&lt;p&gt;Today, in under 3 minutes you went through my then painful story of how I started my machine learning exploration on a 2GB RAM machine back in 2016. I hope this inspires you to crunch more results out of your current laptop!
&lt;br&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Methods of Integrating Artificial Intelligence on Flutter]]></title><description><![CDATA[One of the coolest UI toolkit’s for cross-platform applications, Flutter, a Google offering has grown rapidly in popularity over the last…]]></description><link>https://xprilion.com/methods-of-integrating-artificial-intelligence-on-flutter/</link><guid isPermaLink="false">https://xprilion.com/methods-of-integrating-artificial-intelligence-on-flutter/</guid><pubDate>Thu, 16 Apr 2020 21:19:00 GMT</pubDate><content:encoded>&lt;p&gt;One of the coolest UI toolkit’s for cross-platform applications, &lt;a href=&quot;https://flutter.dev&quot;&gt;Flutter&lt;/a&gt;, a Google offering has grown rapidly in popularity over the last few years. While there are speculations about how Flutter could affect the developer ecosystem, with the under-development &lt;a href=&quot;https://fuchsia.dev&quot;&gt;Fuchsia&lt;/a&gt; constantly making observers thrum with excitement, we cannot ignore the uprising of another popular market term - artificial intelligence (AI). This blog discusses the confluence of Flutter with AI!&lt;/p&gt;
&lt;h2&gt;But isn’t AI super cool?&lt;/h2&gt;
&lt;p&gt;Yes, and it’s hot as well!&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/April/artificial-intelligence-is-hot.png&quot; alt=&quot;Artificial Intelligence is Hot&quot;&gt;
Source: &lt;a href=&quot;/&quot;&gt;Your Truly&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Should Flutter devs care for AI?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Definitely.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You’ll not be the first to ask why you would need AI on mobile apps, or why would you need a unified way of performing machine learning on your business websites and apps. So let me quickly introduce you to some folks who made it big by incorporating machine learning in their business apps - &lt;/p&gt;
&lt;h3&gt;1. Google&lt;/h3&gt;
&lt;p&gt;When we’re talking about machine learning and artificial intelligence in general, Google is one of the foremost names that pop up.&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;style&gt;.embed-container { position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden; max-width: 100%; } .embed-container iframe, .embed-container object, .embed-container embed { position: absolute; top: 0; left: 0; width: 100%; height: 100%; }&lt;/style&gt;&lt;div class=&apos;embed-container&apos;&gt;&lt;iframe src=&apos;https://www.youtube.com/embed/YuOBzWF0Aws&apos; frameborder=&apos;0&apos; allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;
&lt;br&gt;
Being as smart as Google is definitely not an easy task for a human. They leveraged the power of AI as one of the earliest players and today, a plethora of Google products such as GMail, Google Assistant, Google Translate and others. 
&lt;h3&gt;2. Netflix&lt;/h3&gt;
&lt;p&gt;Remember how tough it is to stop using the Netflix app once you started to explore the infinite treasures in it. each better than the previous? Netflix was one of the early betters on AI, and today, they lead the market of subscription based video streaming which keeps the viewers glued to their screens due to the power of recommendations that it makes.&lt;/p&gt;
&lt;br&gt;
&lt;br&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/April/netflix-subscription.png&quot; alt=&quot;Netflix subscription meme&quot;&gt;
Source: &lt;a href=&quot;/&quot;&gt;Your Truly Returns&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
Oh, and, please get your own subscription even if your crush does not ask you for your account. (And tell her to get one too!)
&lt;hr&gt;
&lt;p&gt;By now, if you’re convinced you do need artificial intelligence on your apps, let’s move on to discuss the various methods you have available for making AI enabled apps!&lt;/p&gt;
&lt;h2&gt;How do I get AI on my app?&lt;/h2&gt;
&lt;br&gt;
&lt;br&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/April/super-cool-ai-app.jpg&quot; alt=&quot;Super cool AI app meme&quot;&gt;
Source: &lt;a href=&quot;/&quot;&gt;Your Truly Again&lt;/a&gt;&lt;/p&gt;
&lt;br&gt;
To integrate machine learning with your mobile apps, you\&apos;ll need a model in place, and then, a way to call that model. In Flutter, the options you have available for running ML models in apps, at the time of writing this blog, are - 
&lt;ul&gt;
&lt;li&gt;Firebase ML Kit&lt;/li&gt;
&lt;li&gt;On-device models&lt;/li&gt;
&lt;li&gt;Models as APIs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let’s try to understand what each of these are, and how you would decide which one you would want.&lt;/p&gt;
&lt;h3&gt;Firebase ML Kit&lt;/h3&gt;
&lt;p&gt;ML Kit is a part of the Firebase suite which allows app developers to quickly import and use machine learing models from the Firebase console. Besides having the ability to host and import custom models (not yet available on Firebase for Flutter), there are a number of readymade state-of-the-art models available on Firebase such as - &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Face detection&lt;/li&gt;
&lt;li&gt;On-device Translation&lt;/li&gt;
&lt;li&gt;Object detection and tracking&lt;/li&gt;
&lt;li&gt;Smart Reply, and others that keep getting added to the console!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This method is suitable when your application is using Firebase, or you have a custom model but do not want to host it on your own server setup. It is possible to cache the models hosted on Firebase, and hence this method is also suitable for model which expect regular but not very frequent updates.&lt;/p&gt;
&lt;h3&gt;On-device models&lt;/h3&gt;
&lt;p&gt;On device models are very powerful if you want to perform high-speed inference directly on the devices of the app users. A very popular way of creating such models is to first create them as TensorFlow models, and then to export them as &lt;code class=&quot;language-text&quot;&gt;.tflite&lt;/code&gt; files. You can then use the ML Kit plugin in your Flutter app to import from within the project repository the stored &lt;code class=&quot;language-text&quot;&gt;.tflite&lt;/code&gt; file and run it for inference.&lt;/p&gt;
&lt;p&gt;You can find a sample Flutter application using the Face detection model available on Firebase, by first downloading it and then using it as an on-device model &lt;a href=&quot;https://github.com/PacktPublishing/Mobile-Deep-Learning-Projects/tree/master/Chapter2/flutter_face_detection&quot;&gt;here&lt;/a&gt;. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The code in the sample repository given above has been detailed in &lt;i&gt;Chapter 2: Mobile Vision - Face Detection Using On-Device Models&lt;/i&gt; of my book &lt;a href=&quot;https://www.packtpub.com/data/mobile-deep-learning-projects&quot;&gt;Mobile Deep Learning with TensorFlow Lite, ML Kit and Flutter&lt;/a&gt;. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This method is most suitable when you want your app users to experience no lag in the time it takes the model to perform inference, and are also confident that the model will not require rapid updates.&lt;/p&gt;
&lt;h3&gt;Models as APIs&lt;/h3&gt;
&lt;p&gt;This is another very popular method of integrating machine learning with apps. In this method, we wrap the model in an API service and host it using web based servers. These servers could be popular platforms like AWS Lambda, Google App Engine, Heroku or Virtual Machines with a runtime that supports running the model and serving it as a web based service.&lt;/p&gt;
&lt;p&gt;This method is best suitable when you’re comfortable with working with servers and web interfaces, and also expect the model to update very frequently.&lt;/p&gt;
&lt;p&gt;I shall be discussing this method in details in the future blogs. &lt;/p&gt;</content:encoded></item><item><title><![CDATA[Folding@Home Setup - Local and Cloud VM]]></title><description><![CDATA[The world is facing an unprecedented situation with the Coronavirus outbreak. It is crucial at these times for everyone to join hands and…]]></description><link>https://xprilion.com/folding-at-home-setup/</link><guid isPermaLink="false">https://xprilion.com/folding-at-home-setup/</guid><pubDate>Tue, 24 Mar 2020 13:49:00 GMT</pubDate><content:encoded>&lt;p&gt;The world is facing an unprecedented situation with the &lt;a href=&quot;https://www.who.int/emergencies/diseases/novel-coronavirus-2019&quot;&gt;Coronavirus outbreak&lt;/a&gt;. It is crucial at these times for everyone to join hands and fight the rapidly spreading virus. Computing power available to researchers is very valuable right now. &lt;a href=&quot;https://foldingathome.org/&quot;&gt;Folding@Home&lt;/a&gt; is a project which allows crowd-sourcing computing power by the help of distributed computing over public compute nodes for the study of biological proteins. The project is currently providing (at the time of writing this article) more than 470 petaFlops of computing power to researchers for studying Coronavirus, and to eventually prepare a cure for it.&lt;/p&gt;
&lt;h2&gt;But, What should I do?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Contribute.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Your computer’s idle time can be utilized towards contributing to the Folding@Home project very, very easily.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/March/contribute.png&quot; alt=&quot;Contribute #1&quot;&gt;&lt;/p&gt;
&lt;h2&gt;What do I need?&lt;/h2&gt;
&lt;p&gt;All that you need for contributing to the Folding@Home project - &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A working computer, can be local, can be a VM&lt;/li&gt;
&lt;li&gt;A stable internet connection&lt;/li&gt;
&lt;li&gt;A will to help, even if for a few hours a day!&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Do you have these? If yes (or even if no), read on!&lt;/p&gt;
&lt;h2&gt;How to setup?&lt;/h2&gt;
&lt;p&gt;I shall provide a very quick but complete setup here that should get you started in no time. &lt;/p&gt;
&lt;p&gt;The general procedure is as follows - &lt;/p&gt;
&lt;ol start=&quot;0&quot;&gt;
&lt;li&gt;&lt;a href=&quot;https://apps.foldingathome.org/passkey/create&quot;&gt;Create a passkey&lt;/a&gt; for yourself.&lt;/li&gt;
&lt;li&gt;Download and install the &lt;code class=&quot;language-text&quot;&gt;FAHClient&lt;/code&gt; setup on the machine which will perform computation. You’ll need your passkey in this step.&lt;/li&gt;
&lt;li&gt;Download the install the &lt;code class=&quot;language-text&quot;&gt;FAHControl&lt;/code&gt; setup on the machine which you will use to control and monitor your &lt;code class=&quot;language-text&quot;&gt;FAHClient&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Any additional configuration as needed.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Let’s get started!&lt;/p&gt;
&lt;h3&gt;Setup on a local machine&lt;/h3&gt;
&lt;p&gt;Setting up on a local machine is very simple. Follow along the steps below -&lt;/p&gt;
&lt;h4&gt;Windows&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://download.foldingathome.org/releases/public/release/fah-installer/windows-10-32bit/v7.5/fah-installer_7.5.1_x86.exe&quot;&gt;Download&lt;/a&gt; and run the installer.&lt;/li&gt;
&lt;li&gt;Click Yes, Next, I Agree, Next, Finish.&lt;/li&gt;
&lt;li&gt;Enter a name, &lt;code class=&quot;language-text&quot;&gt;team number 250120&lt;/code&gt; (to join our team, use 0 for no team), and Passkey.&lt;/li&gt;
&lt;li&gt;Click Save.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;Linux&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Download the &lt;code class=&quot;language-text&quot;&gt;FAHClient&lt;/code&gt; package for your distro, using the following command:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Debian/Ubuntu/Mint&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; https://download.foldingathome.org/releases/public/release/fahclient/debian-testing-64bit/v7.4/fahclient_7.4.4_amd64.deb

&lt;span class=&quot;token comment&quot;&gt;# RedHat / CentOS / Fedora&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; https://download.foldingathome.org/releases/public/release/fahclient/centos-5.3-64bit/v7.4/fahclient-7.4.4-1.x86_64.rpm&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Install package using following command:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Debian/Ubuntu/Mint&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; dpkg -i --force-depends fahclient_7.4.4_amd64.deb
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; -f

&lt;span class=&quot;token comment&quot;&gt;# RedHat / CentOS / Fedora&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rpm&lt;/span&gt; -i --nodeps fahclient-7.4.4-1.x86_64.rpm&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Enter a name, &lt;code class=&quot;language-text&quot;&gt;team number 250120&lt;/code&gt; (to join our team, use 0 for no team), and Passkey.&lt;/li&gt;
&lt;li&gt;Complete the &lt;code class=&quot;language-text&quot;&gt;FAHClient&lt;/code&gt; installation.&lt;/li&gt;
&lt;li&gt;Download &lt;code class=&quot;language-text&quot;&gt;FAHControl&lt;/code&gt; using the following command:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Debian/Ubuntu/Mint&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; https://download.foldingathome.org/releases/public/release/fahcontrol/debian-testing-64bit/v7.4/fahcontrol_7.4.4-1_all.deb

&lt;span class=&quot;token comment&quot;&gt;# RedHat / CentOS / Fedora&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; https://download.foldingathome.org/releases/public/release/fahcontrol/centos-5.3-64bit/v7.4/fahcontrol-7.4.4-1.noarch.rpm&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;6&quot;&gt;
&lt;li&gt;Install FAHControl using the following command:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Debian/Ubuntu/Mint&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; dpkg -i --force-depends fahcontrol_7.4.4-1_all.deb
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;install&lt;/span&gt; -f

&lt;span class=&quot;token comment&quot;&gt;# RedHat / CentOS / Fedora&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;rpm&lt;/span&gt; -i --nodeps fahcontrol-7.4.4-1.noarch.rpm&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Setup on a VM&lt;/h3&gt;
&lt;p&gt;After provisioning your VM, assuming it is a Linux VM (we prefer Ubuntu 18.04 LTS), follow the given steps - &lt;/p&gt;
&lt;h4&gt;Steps to be performed on VM&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;Update your package repository.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;apt&lt;/span&gt; update&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Download the &lt;code class=&quot;language-text&quot;&gt;FAHClient&lt;/code&gt; package for your distro, using the following command:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Debian/Ubuntu/Mint&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;wget&lt;/span&gt; https://download.foldingathome.org/releases/public/release/fahclient/debian-testing-64bit/v7.4/fahclient_7.4.4_amd64.deb&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Install package using the following command:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# Debian/Ubuntu/Mint
sudo dpkg -i --force-depends fahclient_7.4.4_amd64.deb
sudo apt install -f&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;Enter a name, &lt;code class=&quot;language-text&quot;&gt;team number 250120&lt;/code&gt; (to join our team, use 0 for no team), and Passkey.&lt;/li&gt;
&lt;li&gt;Complete the &lt;code class=&quot;language-text&quot;&gt;FAHClient&lt;/code&gt; installation.&lt;/li&gt;
&lt;li&gt;Stop the &lt;code class=&quot;language-text&quot;&gt;FAHClient&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; /etc/init.d/FAHClient stop&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;7&quot;&gt;
&lt;li&gt;Edit the configuration file, as shown below:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;nano&lt;/span&gt; /etc/fahclient/config.xml&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Your file should look like:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;config&amp;gt;
  &amp;lt;!-- Client Control --&amp;gt;
  &amp;lt;fold-anon v=&amp;#39;true&amp;#39;/&amp;gt;

  &amp;lt;!-- Folding Slot Configuration --&amp;gt;
  &amp;lt;gpu v=&amp;#39;false&amp;#39;/&amp;gt;

  &amp;lt;!-- HTTP Server --&amp;gt;
  &amp;lt;allow v=&amp;#39;127.0.0.1 your_local_system_ip&amp;#39;/&amp;gt;

  &amp;lt;!-- Slot Control --&amp;gt;
  &amp;lt;power v=&amp;#39;full&amp;#39;/&amp;gt;

  &amp;lt;!-- User Information --&amp;gt;
  &amp;lt;passkey v=&amp;#39;your_passkey&amp;#39;/&amp;gt;
  &amp;lt;team v=&amp;#39;250120&amp;#39;/&amp;gt;
  &amp;lt;user v=&amp;#39;your_name&amp;#39;/&amp;gt;

  &amp;lt;!-- Web Server --&amp;gt;
  &amp;lt;web-allow v=&amp;#39;127.0.0.1 your_local_system_ip&amp;#39;/&amp;gt;

  &amp;lt;!-- Folding Slots --&amp;gt;
  &amp;lt;slot id=&amp;#39;0&amp;#39; type=&amp;#39;CPU&amp;#39;/&amp;gt;
&amp;lt;/config&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start=&quot;8&quot;&gt;
&lt;li&gt;Restart the &lt;code class=&quot;language-text&quot;&gt;FAHClient&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token function&quot;&gt;sudo&lt;/span&gt; /etc/init.d/FAHClient start&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;Steps to be performed locally&lt;/h4&gt;
&lt;ol start=&quot;9&quot;&gt;
&lt;li&gt;Now, you’ll need to install the &lt;code class=&quot;language-text&quot;&gt;FAHControl&lt;/code&gt; on your local system. Use the steps given in the &lt;a href=&quot;#Setup-on-a-local-machine&quot;&gt;Setup on local machine&lt;/a&gt; section to install &lt;code class=&quot;language-text&quot;&gt;FAHControl&lt;/code&gt; on your local system.&lt;/li&gt;
&lt;li&gt;You should be able to access your remote &lt;code class=&quot;language-text&quot;&gt;FAHClient&lt;/code&gt; using the following address:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;http://your_vm_ip:7396&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should see the dashboard displaying information as shown in the following screenshot:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/March/foldingcontrol.png&quot; alt=&quot;Folding@Home The Code Foundation Dashboard&quot;&gt;&lt;/p&gt;
&lt;p&gt;You can always head over the &lt;a href=&quot;https://foldingathome.org/support/faq/&quot;&gt;official installation documentation&lt;/a&gt; for more details and options! You can also ask questions on the &lt;a href=&quot;https://foldingforum.org/&quot;&gt;Folding Forum&lt;/a&gt;.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Being Noob - Starting a tech journey]]></title><description><![CDATA[Hi there! I realized I began sort of suddenly, talking about networks first and then a tech scholarship, while not having yet talked about…]]></description><link>https://xprilion.com/being-noob/</link><guid isPermaLink="false">https://xprilion.com/being-noob/</guid><pubDate>Sun, 12 Jan 2020 11:09:00 GMT</pubDate><content:encoded>&lt;p&gt;Hi there! I realized I began sort of suddenly, talking about networks first and then a tech scholarship, while not having yet talked about how things began for me and what I believe is a good way to launch a journey in computer science.&lt;/p&gt;
&lt;h2&gt;So, talking about past, eh?&lt;/h2&gt;
&lt;p&gt;No really, but sort of, but unkinda.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/Jan/meme-1.jpg&quot; alt=&quot;Anubhav Singh Meme #1&quot;&gt;&lt;/p&gt;
&lt;h2&gt;How does it all begin?&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;python2&quot;&gt;&lt;pre class=&quot;language-python2&quot;&gt;&lt;code class=&quot;language-python2&quot;&gt;print &amp;quot;Hello World&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Starting a journey in tech is more about willing to explore the unknown. Unlike other fields, its not about reading up a good deal of literature first and then trying to apply it.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;No programmer reads the documentation beyond Getting Started unless they’re stuck.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;And that’s what you should do with your journey - if you really wish to start moving forward in your tech journey, stop trying to know &lt;em&gt;all&lt;/em&gt; about it. Just be like this - &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/Jan/meme-2.jpg&quot; alt=&quot;Anubhav Singh Meme #2&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Oh but what do I do?&lt;/h2&gt;
&lt;p&gt;What you do once you’re started is simple - you do what you love doing. Computer Science is that one field which holds the potential to help you in whatever passion you hold - from high school algebra to politics (&lt;a href=&quot;https://en.wikipedia.org/wiki/The_Great_Hack&quot;&gt;The Great Hack&lt;/a&gt;) or discovering new planets, your tech journey can take you pretty much anywhere you wish to go!&lt;/p&gt;
&lt;p&gt;A nice way to begin climbing the mountain is to identify it. Set goals of what you wish to build. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Don’t learn a language just because you wish to speak it, but don’t have anything to say.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/Jan/meme-3.jpeg&quot; alt=&quot;Anubhav Singh Meme #3&quot;&gt;&lt;/p&gt;
&lt;h2&gt;But..how do I learn X and Y to do Z?&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Google.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Reading blogs, documentations, papers is probably the best habit you can develop in your tech journey. Start being a regular at Google and begin searching out all possible ways of expressing your query. Read as many resources you can get. Don’t straight off jump into video courses and lectures - take time to understand from blogs what you’re trying to learn and how it is going to be useful to you.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Don’t be technology intolerant. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Be fair to all frameworks or libraries you know or do not know of when deciding what you need to learn to build something. Don’t jump into learning something just because others are doing it. Rememeber, thoughts come before words, and we choose words based on thoughts. Choose your frameworks or languages based on what best suits the product you wish to build.&lt;/p&gt;
&lt;h2&gt;What did you learn today&lt;/h2&gt;
&lt;p&gt;Today, in under 3 minutes you went through my take on what are the most important points you need to remember when starting a journey in tech!&lt;/p&gt;
&lt;p&gt;I’ll post more on this blog on 16th Jan, 2020! Bookmark my site to stay tuned!&lt;/p&gt;
&lt;h3&gt;About me&lt;/h3&gt;
&lt;p&gt;&lt;i&gt;I am a web developer turned machine learning explorer who loves mixing and matching various stacks! I lead the team at &lt;a href=&quot;https://github.com/thecodefoundation&quot;&gt;The Code Foundation&lt;/a&gt; and we love solving problems about computer vision and NLP!&lt;/p&gt;
&lt;p&gt;Send me a hi on &lt;a href=&quot;mailto:hi@xpri.dev&quot;&gt;hi@xpri.dev&lt;/a&gt;
&lt;/i&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[What is the Venkat Panchapakesan Memorial Scholarship and Why its not won in a day.]]></title><description><![CDATA[It was with a crazy smile and immense gratitude that I read through the entire mail from Google India about being awarded the Venkat…]]></description><link>https://xprilion.com/venkat-panchapakesan-memorial-scholarship-part-1/</link><guid isPermaLink="false">https://xprilion.com/venkat-panchapakesan-memorial-scholarship-part-1/</guid><pubDate>Wed, 08 Jan 2020 16:55:00 GMT</pubDate><content:encoded>&lt;p&gt;It was with a crazy smile and immense gratitude that I read through the entire mail from Google India about being awarded the &lt;a href=&quot;https://buildyourfuture.withgoogle.com/scholarships/venkat-panchapakesan-memorial-scholarship/&quot;&gt;Venkat Panchapakesan Memorial Scholarship&lt;/a&gt; for the session 2019-20. An amazing and prestigious scholarship, I am really happy to have been made a part of it and would love to talk more about it in hope that it would help someone deserving receive the same in the future.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2020/Jan/venkat-panchapakesan-memorial-scholarship-acceptance-letter.png&quot; alt=&quot;Image - Acceptance letter for Venkat Panchapakesan Memorial Scholarship&quot;&gt;&lt;/p&gt;
&lt;p&gt;So,&lt;/p&gt;
&lt;h2&gt;What is Venkat Panchapakesan Memorial Scholarship all about?&lt;/h2&gt;
&lt;p&gt;The answer to this question begins with another question - &lt;/p&gt;
&lt;h3&gt;Who was Venkat Panchapakesan?&lt;/h3&gt;
&lt;p&gt;A description from &lt;a href=&quot;https://buildyourfuture.withgoogle.com/scholarships/venkat-panchapakesan-memorial-scholarship/&quot;&gt;Google’s Web page about the scholarship&lt;/a&gt; describes Venkat as given below - &lt;/p&gt;
&lt;pre style=&quot;white-space : pre-wrap !important;&quot;&gt;
Venkat was a much loved and highly respected engineer whose career took him to YouTube, Google, and Yahoo, among other notable companies. He tragically passed away too young, after a battle with cancer. During his short time he deeply touched the hearts and minds of his friends, family and colleagues. He taught us to be generous, humble, ever-optimistic and to always find the best in people.
&lt;/pre&gt;
&lt;p&gt;Once you read through, and try taking a look at some videos on YouTube about Venkat, you’ll come to realize the beauty of his personality and what made him so loved. But above that, you’ll realize what it means to be compassionate, supporting and forever happy to help. It is this understanding, which will help you answer the following question.&lt;/p&gt;
&lt;h3&gt;Who is an ideal candidate for winning this scholarship?&lt;/h3&gt;
&lt;p&gt;Frankly, that is best known to the selectors of the scholarship. In my opinion, my profile stood out due to my contribution to the various tech communities around me and my willingness to use technology for achieveing sustainable development goals. Hence, someone who loves helping people, goes beyond their way to aid those around them in their problems, loves spreading the word about technology and believes that they can help the world become a better and sustainable place with the help of technology would probably stand a good chance at winning the scholarship!&lt;/p&gt;
&lt;p&gt;As long as you’re leaving a positive impact on even a handful of people around you, you’re doing good!&lt;/p&gt;
&lt;h3&gt;And do I need to be a super programmer?&lt;/h3&gt;
&lt;p&gt;No! All you need to do is to know how to and be willing to use technology for making this world a more sustainable place and to help people around you in having a better life. Now, ’sustainable’ could have a number of meanings, you can Google up &lt;code class=&quot;language-text&quot;&gt;United Nations Sustainable Development Goals&lt;/code&gt; and study about the several factors which contribute towards making the world a better place to live in! Remember, at the end of the day, the best person is he/she who uses whatever they have learnt for the best of people around them, in whatever measure they are able to!&lt;/p&gt;
&lt;h2&gt;This scholarship is not won in a day :)&lt;/h2&gt;
&lt;p&gt;From the above discussion so far, you’d have realized that winning this scholarship may require months or even years of previous work. Hence, to maximize your chances of being among the lucky 5-6 next year who bag this amazing opportunity, make sure you start giving back to your local ecosystem in any manner that’s possible for you! It will take time, patience, effort but at the end of it all, regarldess you win it or not, you’ll find yourself a much better version of yourself and will definitely be a loved face among the people around you!&lt;/p&gt;
&lt;h2&gt;What did you learn today&lt;/h2&gt;
&lt;p&gt;Today, in under 3 minutes you learnt about the Venkat Panchapakesan Memorial Scholarship and why I think this scholarship recognizes those who do their best over a long period of time to help people around them using technology. There will be more posts coming on this topic in the future at regular intervals, and I hope you’ll be able to make the best of them when applying in the future! &lt;/p&gt;</content:encoded></item><item><title><![CDATA[Difference between localhost, 127.0.0.1 and 0.0.0.0]]></title><description><![CDATA[I’ve been often asked, why do we sometimes need to specify the IP for a program to be  in order to get it to be accessible from machines…]]></description><link>https://xprilion.com/difference-between-localhost-127.0.0.1-and-0.0.0.0/</link><guid isPermaLink="false">https://xprilion.com/difference-between-localhost-127.0.0.1-and-0.0.0.0/</guid><pubDate>Sat, 04 Jan 2020 20:00:00 GMT</pubDate><content:encoded>&lt;p&gt;I’ve been often asked, why do we sometimes need to specify the IP for a program to be &lt;code class=&quot;language-text&quot;&gt;0.0.0.0&lt;/code&gt; in order to get it to be accessible from machines outsides the network. I shall attempt to answer the question in this post.&lt;/p&gt;
&lt;h2&gt;What is 127.0.0.1&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;127.0.0.1&lt;/code&gt; is the loopback address. It means, whatever request is made, send it back to the same machine. When a remote host calls this, they’re actually calling themselves. &lt;/p&gt;
&lt;h2&gt;What is localhost&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;localhost&lt;/code&gt; is simply a conventional mapping done in the &lt;code class=&quot;language-text&quot;&gt;hosts&lt;/code&gt; file of the OS. It can be changed. I could ask &lt;code class=&quot;language-text&quot;&gt;google.com&lt;/code&gt; to point to my loopback address and that would work same.&lt;/p&gt;
&lt;h2&gt;What is 0.0.0.0&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;0.0.0.0&lt;/code&gt; is a wildcard for all open routes to the system within the system where the script runs. &lt;/p&gt;
&lt;h2&gt;When do you face the need to differentiate between them -&lt;/h2&gt;
&lt;p&gt;We specifically face the problem of differentiating them in Flask/Django/NodeJS applications because these are runtimes which require the user to define which IP (or routes) to listen on. If you’ve ever tried web development on PHP, you’d realize that the &lt;code class=&quot;language-text&quot;&gt;localhost&lt;/code&gt; web server was accessible using the IP of the computer’s LAN as well from other devices (say your mobile). This is because by default Apache listens on &lt;code class=&quot;language-text&quot;&gt;*:80&lt;/code&gt; which essentially means &lt;code class=&quot;language-text&quot;&gt;0.0.0.0:80&lt;/code&gt;, as given in its default virtual host configuration file - &lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# Ensure that Apache listens on port 80
Listen 80
&amp;lt;VirtualHost *:80&amp;gt;  # Notice this
    DocumentRoot &amp;quot;/var/www/html&amp;quot; # OR &amp;quot;C:/xampp/htdocs&amp;quot; for Windows systems with XAMPP installation

    # Other directives here
&amp;lt;/VirtualHost&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[OMG, a new look!]]></title><description><![CDATA[Hey there! If you have visited my website in 2019 or before, you would know that my website was pretty blue and very blue. Overall, it was…]]></description><link>https://xprilion.com/hello-world/</link><guid isPermaLink="false">https://xprilion.com/hello-world/</guid><pubDate>Sun, 24 Nov 2019 09:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Hey there! If you have visited my website in 2019 or before, you would know that my website was pretty blue and very blue. Overall, it was unexciting, and there was no fresh content on it. But did that worry me? Oh yes.&lt;/p&gt;
&lt;h2&gt;So what did I do about it?&lt;/h2&gt;
&lt;h3&gt;Ditch PHP website&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ &lt;span class=&quot;token builtin class-name&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;I are poor men&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So I ditched my legacy website (constant since 2016) and began the hunt of a perfect way to put forward my work and to have more fun on this website instead of simply hosting my unupdated resume.&lt;/p&gt;
&lt;p&gt;Static Portfolios are BORING:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://media3.giphy.com/media/l0HlzgveB7SAZC6Iw/giphy.gif&quot; alt=&quot;Anubhav Singh Says - Static Portfolios are boring&quot;&gt;&lt;/p&gt;
&lt;p&gt;But PHP websites cost. And I needed to fit this thing in my budget.&lt;/p&gt;
&lt;h2&gt;Hoping for more content in future :D&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;$ Anubhav &lt;span class=&quot;token string&quot;&gt;&quot;write&quot;&lt;/span&gt;&lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I have this bad habit of creating cool blog websites, and forgetting to write on them. This time, I do hope I am able to keep writing stuff here. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2019/Nov/jokes.jpg&quot; alt=&quot;Meme - I will post regularly on this blog and other jokes you can tell yourself&quot;&gt;&lt;/p&gt;
&lt;p&gt;Only hoping that I shall be able to keep this blog alive! &lt;/p&gt;
&lt;p&gt;Thanks for hanging around! :)&lt;/p&gt;</content:encoded></item></channel></rss>