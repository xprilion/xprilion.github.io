1:"$Sreact.fragment"
2:I[6575,["177","static/chunks/app/layout-d2130fc72b09044a.js"],"ThemeProvider"]
3:I[4922,[],""]
4:I[3720,[],""]
6:I[2466,[],"MetadataBoundary"]
8:I[2466,[],"OutletBoundary"]
b:I[6114,[],"AsyncMetadataOutlet"]
d:I[2466,[],"ViewportBoundary"]
f:I[4797,[],""]
:HL["/_next/static/media/22966f4f11fece13-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/3df4cf0b22f61940-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/93f479601ee12b01-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/a481f011d1f4a14b-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/feff4f1fc62fae3c-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/333d50f30a431cfc.css","style"]
:HL["/_next/static/css/8ccfe5b50d8babb8.css","style"]
:HL["/_next/static/css/f3b8208e8dab82f4.css","style"]
0:{"P":null,"b":"_jAr4oU4wB7NwctTABZbd","p":"","c":["","golang-vs-rust-api-performance-load-test"],"i":false,"f":[[["",{"children":["(blog)",{"children":[["slug","golang-vs-rust-api-performance-load-test","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/333d50f30a431cfc.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/8ccfe5b50d8babb8.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"__variable_6ab973 __variable_9a8899","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","type":"image/png","href":"/apple-icon.png","sizes":"96x96"}],["$","link",null,{"rel":"icon","type":"image/svg+xml","href":"/icon0.svg"}],["$","link",null,{"rel":"shortcut icon","href":"/favicon.ico"}],["$","link",null,{"rel":"apple-touch-icon","sizes":"180x180","href":"/apple-touch-icon.png"}],["$","meta",null,{"name":"apple-mobile-web-app-title","content":"xprilion's blog"}],["$","link",null,{"rel":"manifest","href":"/manifest.json"}],["$","meta",null,{"name":"theme-color","content":"#7b46f6"}],["$","meta",null,{"charSet":"utf-8"}],["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta",null,{"itemProp":"name","content":"xprilion's blog"}],["$","meta",null,{"itemProp":"description","content":"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes."}],["$","meta",null,{"itemProp":"image","content":"/favicon.png"}],["$","meta",null,{"property":"og:title","content":"xprilion's blog"}],["$","meta",null,{"property":"og:description","content":"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes."}],["$","meta",null,{"property":"og:image","content":"/favicon.png"}],["$","meta",null,{"property":"og:type","content":"website"}],["$","meta",null,{"name":"twitter:card","content":"summary_large_image"}],["$","meta",null,{"name":"twitter:site","content":"@xprilion"}],["$","meta",null,{"name":"twitter:creator","content":"@xprilion"}],["$","meta",null,{"name":"twitter:title","content":"xprilion's blog"}],["$","meta",null,{"name":"twitter:description","content":"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes."}],["$","meta",null,{"name":"twitter:image","content":"/favicon.png"}]]}],["$","body",null,{"className":"antialiased","children":["$","$L2",null,{"attribute":"class","defaultTheme":"system","enableSystem":true,"disableTransitionOnChange":true,"children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}]]}],{"children":["(blog)",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$0:f:0:1:1:props:children:1:props:children:1:props:children:props:children:props:notFound:0:1:props:style","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$0:f:0:1:1:props:children:1:props:children:1:props:children:props:children:props:notFound:0:1:props:children:props:children:1:props:style","children":404}],["$","div",null,{"style":"$0:f:0:1:1:props:children:1:props:children:1:props:children:props:children:props:notFound:0:1:props:children:props:children:2:props:style","children":["$","h2",null,{"style":"$0:f:0:1:1:props:children:1:props:children:1:props:children:props:children:props:notFound:0:1:props:children:props:children:2:props:children:props:style","children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","golang-vs-rust-api-performance-load-test","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",["$","$L6",null,{"children":"$L7"}],[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f3b8208e8dab82f4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L8",null,{"children":["$L9","$La",["$","$Lb",null,{"promise":"$@c"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","83f0EBJtglwjwDr7Qtwjk",{"children":[["$","$Ld",null,{"children":"$Le"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],null]}],false]],"m":"$undefined","G":["$f","$undefined"],"s":false,"S":true}
10:"$Sreact.suspense"
11:I[6114,[],"AsyncMetadata"]
7:["$","$10",null,{"fallback":null,"children":["$","$L11",null,{"promise":"$@12"}]}]
a:null
e:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
9:null
13:I[1701,["943","static/chunks/943-e7e8665b07d20a9a.js","351","static/chunks/351-1cdf3b1c3e027fe8.js","224","static/chunks/224-26f995270d2801dd.js","356","static/chunks/app/(blog)/%5Bslug%5D/page-74658537dbc97f21.js"],"default"]
14:I[1999,["943","static/chunks/943-e7e8665b07d20a9a.js","351","static/chunks/351-1cdf3b1c3e027fe8.js","224","static/chunks/224-26f995270d2801dd.js","356","static/chunks/app/(blog)/%5Bslug%5D/page-74658537dbc97f21.js"],""]
15:I[5224,["943","static/chunks/943-e7e8665b07d20a9a.js","351","static/chunks/351-1cdf3b1c3e027fe8.js","224","static/chunks/224-26f995270d2801dd.js","356","static/chunks/app/(blog)/%5Bslug%5D/page-74658537dbc97f21.js"],"Image"]
16:I[1106,["943","static/chunks/943-e7e8665b07d20a9a.js","351","static/chunks/351-1cdf3b1c3e027fe8.js","224","static/chunks/224-26f995270d2801dd.js","356","static/chunks/app/(blog)/%5Bslug%5D/page-74658537dbc97f21.js"],"default"]
18:I[4046,["943","static/chunks/943-e7e8665b07d20a9a.js","351","static/chunks/351-1cdf3b1c3e027fe8.js","224","static/chunks/224-26f995270d2801dd.js","356","static/chunks/app/(blog)/%5Bslug%5D/page-74658537dbc97f21.js"],""]
17:T1818,<p>Roughly 8 months back, I wrote <a href="https://xprilion.com/golang-vs-python-api-performance-load-test/">an article comparing the performance of Python against Golang</a>, and the latter emerged a clear winner. I went on to explore Golang at depth and even delivered a few talks in which I leveraged the power of goroutines and channels to build demos which showcased parallel processing and lightweight AI agent containerization.</p><p>However, my quest for extreme optimisation kept luring me towards Rust every few weeks, until today, when I decided to make the languages go head-to-head in the one domain I work on often - building APIs. The code used for testing is available here - <a href="https://github.com/xprilion/go-vs-rust-api-performance-test">https://github.com/xprilion/go-vs-rust-api-performance-test</a>. I just ran the tests on my laptop without any changes in RAM/running apps while testing it.</p><h3 id="setting-up-the-servers">Setting Up the Servers</h3><p>To ensure an apples-to-apples comparison, I wrote minimal web servers in both Golang and Rust, which would be subjected to the same load tests. Since both languages offer compiling the code to performant binaries, I did that.</p><p>Then I ran the binaries on port <code>8080</code> for Golang and <code>8081</code> for Rust and stress tested them using the <code>hey</code> tool.</p><h4 id="golang-server">Golang Server</h4><pre><code class="language-go">// server.go
package main

import (
    "fmt"
    "net/http"
)

func greetHandler(w http.ResponseWriter, r *http.Request) {
    fmt.Fprintf(w, "Hello, visitor! You've requested: %s\n", r.URL.Path)
}

func main() {
    http.HandleFunc("/", greetHandler)
    fmt.Println("Starting server on :8080")
    if err := http.ListenAndServe(":8080", nil); err != nil {
        fmt.Printf("Error starting server: %s\n", err)
    }
}
</code></pre><p>Compiled and started with:</p><pre><code class="language-bash">go build -o mygoserver server.go
./mygoserver
</code></pre><h4 id="rust-server">Rust Server</h4><pre><code class="language-rust">use warp::Filter;

#[tokio::main]
async fn main() {
    let route = warp::path::param()
        .map(|path: String| format!("Hello, visitor! You've requested: /{}", path));
    warp::serve(route).run(([127, 0, 0, 1], 8081)).await;
}
</code></pre><p>Ran it using:</p><pre><code class="language-bash">cargo run --release
</code></pre><h3 id="load-testing-tools">Load Testing Tools</h3><p>I chose to use the <code>hey</code> tool for load testing. It's lightweight, written in Golang, and provides insightful metrics such as requests per second, latency distributions, and error rates.</p><pre><code class="language-bash">go install github.com/rakyll/hey@latest
</code></pre><h3 id="running-the-performance-tests">Running the Performance Tests</h3><p>I conducted a series of load tests on both servers. Here's the breakdown:</p><ol><li><strong>Time taken to respond to 10,000 requests with 100 concurrent requests</strong></li><li><strong>How many requests the servers could handle in 5 seconds with 100 concurrent requests</strong></li><li><strong>How many requests the servers could handle in 5 seconds with 1 concurrent request</strong></li></ol><h3 id="test-results">Test Results</h3><p>The following table summarizes the results of the performance tests.</p>
<!--kg-card-begin: html-->
<table>
<thead>
<tr>
<th>Language</th>
<th>Requests</th>
<th>Concurrency</th>
<th>Time Taken</th>
<th>Errors</th>
<th>Requests/sec</th>
</tr>
</thead>
<tbody>
<tr>
<td>Golang</td>
<td>10,000</td>
<td>100</td>
<td>0.176 s</td>
<td>0</td>
<td>95,776.8</td>
</tr>
<tr>
<td>Rust</td>
<td>10,000</td>
<td>100</td>
<td>0.124 s</td>
<td>0</td>
<td>142,696.9</td>
</tr>
<tr>
<td>Golang</td>
<td>478,958</td>
<td>100</td>
<td>5 s</td>
<td>0</td>
<td>95,776.8</td>
</tr>
<tr>
<td>Rust</td>
<td>713,630</td>
<td>100</td>
<td>5 s</td>
<td>0</td>
<td>142,696.9</td>
</tr>
<tr>
<td>Golang</td>
<td>121,973</td>
<td>1</td>
<td>5 s</td>
<td>0</td>
<td>24,392.8</td>
</tr>
<tr>
<td>Rust</td>
<td>152,649</td>
<td>1</td>
<td>5 s</td>
<td>0</td>
<td>30,527.5</td>
</tr>
</tbody>
</table>
<!--kg-card-end: html-->
<h3 id="breakdown-of-results">Breakdown of Results</h3><h4 id="test-1-10000-requests-100-concurrent-connections"><strong>Test 1: 10,000 Requests, 100 Concurrent Connections</strong></h4><p>In this test, Rust outperformed Golang significantly, handling 10,000 requests with 100 concurrent connections in <strong>0.124 seconds</strong>, compared to Golang's <strong>0.176 seconds</strong>. Rust also achieved a higher requests-per-second rate (142,696.9 vs. 95,776.8).</p><h4 id="test-2-5-seconds-100-concurrent-connections"><strong>Test 2: 5 Seconds, 100 Concurrent Connections</strong></h4><p>Over 5 seconds, Rust processed <strong>713,630 requests</strong>, while Golang managed <strong>478,958</strong>. Once again, Rust demonstrated superior handling of high-concurrency scenarios.</p><h4 id="test-3-5-seconds-1-concurrent-connection"><strong>Test 3: 5 Seconds, 1 Concurrent Connection</strong></h4><p>Even with only one concurrent connection, Rust managed to outperform Golang, handling <strong>30,527.5 requests per second</strong> compared to Golang's <strong>24,392.8</strong>.</p><p>Hence the verdict came out to be:</p><ul><li><strong>Single concurrent request</strong>: Rust is <strong>1.25x faster than Golang</strong>.</li><li><strong>100 concurrent requests</strong>: Rust is <strong>1.49x faster than Golang</strong>.</li></ul><h3 id="conclusion">Conclusion</h3><p>The results speak for themselves: <strong>Rust</strong> outperforms <strong>Golang</strong> across all tests, particularly under high concurrency. While Golang is still significantly faster than Python (based on earlier tests), Rust offers even better performance with lower latency and higher throughput.</p><p>In a world where efficiency matters, it's clear that Rust is an exceptional choice for performance-critical applications. However, Golang's simplicity, ease of use, and its own solid performance still make it a great choice for a wide range of projects.</p><p>Friends, Romans, countrymen, I am so learning Rust AND Golang.</p>5:["$","$L13",null,{"children":[["$","div",null,{"className":"mb-6","children":[["$","$L14",null,{"href":"/posts","className":"text-blue-600 hover:underline mb-4 block","children":"← Back to all posts"}],["$","h1",null,{"className":"text-2xl md:text-3xl font-bold mb-2","children":"Golang vs Rust: API Performance Load Test"}],["$","p",null,{"className":"text-gray-600 dark:text-gray-200 text-sm ","children":"21 October, 2024"}]]}],["$","$L15",null,{"src":"https://digitalpress.fra1.cdn.digitaloceanspaces.com/4ml9m8u/2025/05/4446cea8-a33c-4c51-85e4-492796375c86--1-.png","alt":"Golang vs Rust: API Performance Load Test","loading":"lazy","className":"w-full h-auto mb-6 rounded-lg object-cover object-center shadow-md shadow-gray-400/30 dark:shadow-gray-700/30","width":1000,"height":1000}],["$","$L16",null,{"post":{"slug":"golang-vs-rust-api-performance-load-test","id":"6814b4f24df6fb00015ae30d","uuid":"262c645a-fb10-4428-af43-d9b7d8e4b4b6","title":"Golang vs Rust: API Performance Load Test","html":"$17","comment_id":"6814b4f24df6fb00015ae30d","feature_image":"https://digitalpress.fra1.cdn.digitaloceanspaces.com/4ml9m8u/2025/05/4446cea8-a33c-4c51-85e4-492796375c86--1-.png","featured":false,"visibility":"public","created_at":"2025-05-02T17:35:06.000+05:30","updated_at":"2025-05-02T17:36:09.000+05:30","published_at":"2024-10-21T00:00:00.000+05:30","custom_excerpt":null,"codeinjection_head":null,"codeinjection_foot":null,"custom_template":null,"canonical_url":null,"url":"https://xprilion.digitalpress.blog/golang-vs-rust-api-performance-load-test/","excerpt":"Roughly 8 months back, I wrote an article comparing the performance of Python against Golang, and the latter emerged a clear winner. I went on to explore Golang at depth and even delivered a few talks in which I leveraged the power of goroutines and channels to build demos which showcased parallel processing and lightweight AI agent containerization.\n\nHowever, my quest for extreme optimisation kept luring me towards Rust every few weeks, until today, when I decided to make the languages go head-","reading_time":3,"access":true,"comments":false,"og_image":null,"og_title":null,"og_description":null,"twitter_image":null,"twitter_title":null,"twitter_description":null,"meta_title":null,"meta_description":null,"email_subject":null,"frontmatter":null,"feature_image_alt":null,"feature_image_caption":null}}],["$","div",null,{"className":"mt-12 pt-8 border-t","children":[["$","h3",null,{"className":"text-xl font-bold mb-4","children":"Share this post"}],["$","div",null,{"className":"flex gap-4","children":[["$","$L14",null,{"href":"https://twitter.com/intent/tweet?text=Golang%20vs%20Rust%3A%20API%20Performance%20Load%20Test&url=https%3A%2F%2Fxprilion.com%2Fgolang-vs-rust-api-performance-load-test","target":"_blank","rel":"noopener noreferrer","className":"text-blue-600 hover:underline","children":"Share on Twitter"}],["$","$L14",null,{"href":"https://www.linkedin.com/shareArticle?mini=true&url=https%3A%2F%2Fxprilion.com%2Fgolang-vs-rust-api-performance-load-test&title=Golang%20vs%20Rust%3A%20API%20Performance%20Load%20Test","target":"_blank","rel":"noopener noreferrer","className":"text-blue-600 hover:underline","children":"Share on LinkedIn"}]]}]]}],["$","$L18",null,{"id":"MathJax-script","src":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.0/es5/tex-mml-chtml.js","async":true}],["$","$L18",null,{"id":"MathJax-config","dangerouslySetInnerHTML":{"__html":"\n            MathJax = {\n              tex: {\n                inlineMath: [['((', '))']],\n                displayMath: [['[[', ']]']],\n              },\n              svg: {\n                fontCache: 'global'\n              }\n            };\n          "}}]]}]
12:{"metadata":[["$","title","0",{"children":"Golang vs Rust: API Performance Load Test"}],["$","meta","1",{"name":"description","content":"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes."}]],"error":null,"digest":"$undefined"}
c:{"metadata":"$12:metadata","error":null,"digest":"$undefined"}
