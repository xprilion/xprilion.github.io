1:"$Sreact.fragment"
2:I[6575,["177","static/chunks/app/layout-29f44809ba3fe938.js"],"ThemeProvider"]
3:I[4922,[],""]
4:I[3720,[],""]
6:I[2466,[],"MetadataBoundary"]
8:I[2466,[],"OutletBoundary"]
b:I[6114,[],"AsyncMetadataOutlet"]
d:I[2466,[],"ViewportBoundary"]
f:I[4797,[],""]
:HL["/_next/static/media/22966f4f11fece13-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/3df4cf0b22f61940-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/a481f011d1f4a14b-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/feff4f1fc62fae3c-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/2dba37557e579c7e.css","style"]
:HL["/_next/static/css/17c99d248f3289f7.css","style"]
:HL["/_next/static/css/f3b8208e8dab82f4.css","style"]
0:{"P":null,"b":"U0y-XNYKQEr6GA245v640","p":"","c":["","codelabs","vertexai-palm-api-introduction-python-lab"],"i":false,"f":[[["",{"children":["codelabs",{"children":[["slug","vertexai-palm-api-introduction-python-lab","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/2dba37557e579c7e.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/17c99d248f3289f7.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"__variable_6ab973","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","type":"image/png","href":"/apple-icon.png","sizes":"96x96"}],["$","link",null,{"rel":"icon","type":"image/svg+xml","href":"/icon0.svg"}],["$","link",null,{"rel":"shortcut icon","href":"/favicon.ico"}],["$","link",null,{"rel":"apple-touch-icon","sizes":"180x180","href":"/apple-touch-icon.png"}],["$","meta",null,{"name":"apple-mobile-web-app-title","content":"xprilion's blog"}],["$","link",null,{"rel":"manifest","href":"/manifest.json"}],["$","meta",null,{"name":"theme-color","content":"#7b46f6"}],["$","meta",null,{"charSet":"utf-8"}],["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta",null,{"itemProp":"name","content":"xprilion's blog"}],["$","meta",null,{"itemProp":"description","content":"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes."}],["$","meta",null,{"itemProp":"image","content":"/favicon.png"}],["$","meta",null,{"property":"og:title","content":"xprilion's blog"}],["$","meta",null,{"property":"og:description","content":"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes."}],["$","meta",null,{"property":"og:image","content":"/favicon.png"}],["$","meta",null,{"property":"og:type","content":"website"}],["$","meta",null,{"name":"twitter:card","content":"summary_large_image"}],["$","meta",null,{"name":"twitter:site","content":"@xprilion"}],["$","meta",null,{"name":"twitter:creator","content":"@xprilion"}],["$","meta",null,{"name":"twitter:title","content":"xprilion's blog"}],["$","meta",null,{"name":"twitter:description","content":"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes."}],["$","meta",null,{"name":"twitter:image","content":"/favicon.png"}]]}],["$","body",null,{"className":"antialiased","children":["$","$L2",null,{"attribute":"class","defaultTheme":"system","enableSystem":true,"disableTransitionOnChange":true,"children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]]}]]}],{"children":["codelabs",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","vertexai-palm-api-introduction-python-lab","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",["$","$L6",null,{"children":"$L7"}],[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f3b8208e8dab82f4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L8",null,{"children":["$L9","$La",["$","$Lb",null,{"promise":"$@c"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","k_CRu0NfcV939QNfOht-e",{"children":[["$","$Ld",null,{"children":"$Le"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],null]}],false]],"m":"$undefined","G":["$f","$undefined"],"s":false,"S":true}
10:"$Sreact.suspense"
11:I[6114,[],"AsyncMetadata"]
7:["$","$10",null,{"fallback":null,"children":["$","$L11",null,{"promise":"$@12"}]}]
a:null
e:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
9:null
13:I[5378,["943","static/chunks/943-eb5c9570e2ea5452.js","328","static/chunks/328-beff309a0d839380.js","560","static/chunks/560-6c8bff668915e202.js","182","static/chunks/app/codelabs/%5Bslug%5D/page-3144b6c2d83a0fe1.js"],"default"]
14:I[4518,["943","static/chunks/943-eb5c9570e2ea5452.js","328","static/chunks/328-beff309a0d839380.js","560","static/chunks/560-6c8bff668915e202.js","182","static/chunks/app/codelabs/%5Bslug%5D/page-3144b6c2d83a0fe1.js"],"default"]
16:I[1999,["943","static/chunks/943-eb5c9570e2ea5452.js","328","static/chunks/328-beff309a0d839380.js","560","static/chunks/560-6c8bff668915e202.js","182","static/chunks/app/codelabs/%5Bslug%5D/page-3144b6c2d83a0fe1.js"],""]
17:I[4046,["943","static/chunks/943-eb5c9570e2ea5452.js","328","static/chunks/328-beff309a0d839380.js","560","static/chunks/560-6c8bff668915e202.js","182","static/chunks/app/codelabs/%5Bslug%5D/page-3144b6c2d83a0fe1.js"],""]
15:T1f5c,<h2 id="overview">Overview</h2><p>Duration: 1</p><p>Hey there!</p><p>In this Codelab, we'll walk through creating a simple chatbot based game using Google Cloud's Vertex AI and Flask, a popular web framework in Python. Our application will ask you to make a guess about what the bot is thinking and the bot will respond with hints about what it is thinking and how far away your guess is from the correct item.</p><h2 id="requirements">Requirements</h2><p>Duration: 2</p><p>In order to follow this codelab, you'll need the following:</p><ol><li>A Google Cloud Platform account with active billing.</li><li>A development environment with Python 3.7 or above installed.</li><li>Access to terminal/shell for executing commands.</li></ol><h2 id="setting-up-your-google-cloud-environment">Setting Up Your Google Cloud Environment</h2><p>Duration: 10</p><ol><li>Log in to your <a href="https://console.cloud.google.com/">Google Cloud Platform</a> account.</li><li>Create a new project, let's name it <code>project-x</code>.</li><li>Enable <a href="https://cloud.google.com/billing/docs/how-to/modify-project">billing for the project</a>.</li><li>Navigate to the <a href="https://console.cloud.google.com/apis/dashboard">APIs &amp; Services dashboard</a> and enable the Vertex AI API.</li><li><a href="https://cloud.google.com/iam/docs/keys-create-delete">Create a service account and download the JSON key file</a> (<code>key.json</code>). Store this file safely.</li></ol><h2 id="setting-up-your-local-environment">Setting Up Your Local Environment</h2><p>Duration: 5</p><p>Install other required libraries:</p><pre><code class="language-bash">pip install marko google-cloud-aiplatform
</code></pre><p>Install Flask:</p><pre><code class="language-bash">pip install Flask
</code></pre><h2 id="write-the-driving-code">Write the driving code</h2><p>Duration: 10</p><ol><li><strong>Importing Libraries</strong>: We start by importing necessary Python libraries. Flask for our web framework, Vertex AI for AI model interaction, and others for various functionalities.</li></ol><pre><code class="language-python">import os
from flask import Flask, request, Response, g, render_template, jsonify
import marko
import vertexai
from vertexai.language_models import TextGenerationModel
</code></pre><ol><li><strong>Initializing the App and Vertex AI</strong>: We initialize our Flask app and configure Vertex AI with our GCP project details.</li></ol><pre><code class="language-python">
app = Flask(__name__)
app.debug = True

vertexai.init(project="project-x", location="us-central1")
parameters = {
    "temperature": 1,
    "max_output_tokens": 256,
    "top_p": 0.8,
    "top_k": 40
}

model = TextGenerationModel.from_pretrained("text-bison@001")
</code></pre><ol><li><strong>Defining Routes</strong>: We define two routes - one for the home page and another for handling chat messages.</li></ol><pre><code class="language-python">@app.route('/', methods=['GET'])
def hello_world():
    return render_template("chat.html")

@app.route('/chat/&lt;guess&gt;/&lt;actual&gt;', methods=['GET'])
def chat(guess, actual):
    response = model.predict(
        "You are the bot in a guessing game where the player tries to guess a secret item you are thinking about. " +
        "The rules of the game are: 1. the player will make a guess. 2. if the guess is correct or very close to the correct answer, you will say, 'Congratulations, you've got it right!' " +
         "3. If they are not very close to the actual item, respond with a humorous remark about their guess. Then without mentioning the actual item, " + actual + ", provide a subtle hint to guide the player closer to the secret item." +
        "The player has just guessed " + guess + ".",
        **parameters
    )

    return jsonify({
        "response": marko.convert(response.text)
    })



if __name__ == '__main__':
    app.run(debug=True, host="0.0.0.0", port=int(os.environ.get("PORT", 8080)))
</code></pre><p>With the backend done, we're free to implement the UI for the API in any manner we want to.</p><h2 id="ui-for-the-application">UI for the application</h2><p>Duration: 10</p><p>Now, we can develop a quick UI to work with the API of the chatbot. Here's some sample HTML/JS to create one such UI.</p><pre><code class="language-html">&lt;div&gt;
    &lt;div id="chat-box" class="bg-light p-3 mb-3 rounded"&gt;
        &lt;blockquote style="border-left: 4px solid #43a047;"&gt;Bot: Can you guess what am I thinking?&lt;/blockquote&gt;
    &lt;/div&gt;
    &lt;progress id="progress-bar" style="display: none"&gt;&lt;/progress&gt;
    &lt;div class="input-group"&gt;
        &lt;input id="chat-input" type="text" class="form-control" placeholder="Type your message..."&gt;
        &lt;div class="input-group-append"&gt;
            &lt;button id="send-button" class="btn btn-primary"&gt;Guess&lt;/button&gt;
            &lt;button id="quit-button"&gt;Give Up&lt;/button&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
$(function() {
    const items = [
    "Eiffel Tower",
    "Pineapple",
    // ... many more!
    "Rubik's Cube",
    "Bamboo"
];

    var actual_item = items[Math.floor(Math.random()*items.length)];

    $('#chat-input').keypress(function(e) {
        if(e.which == 13) { // 13 is the Enter key
            $('#send-button').click();
        }
    });

    $('#quit-button').click(function() {
        $('#chat-box').append('&lt;blockquote style="border-left: 4px solid red;"&gt;Bot: The answer was ' + actual_item + '&lt;/blockquote&gt;');
        $('#chat-input').val('');
        $('#chat-input').prop('disabled', true);
        $('#send-button').prop('disabled', true);
        $('#quit-button').prop('disabled', true);
    });

    $('#send-button').click(function() {
        var input = $('#chat-input').val().trim();
        if (input !== '') {
            $('#chat-box').append('&lt;blockquote style="border-left: 4px solid dodgerblue;"&gt;User: ' + input + '&lt;/blockquote&gt;');
            $('#chat-input').val('');
            $('#progress-bar').show();
            // Use AJAX to send the input to the server and get a response
            $.ajax({
                url: '/chat/' + encodeURIComponent(input) + '/' + encodeURIComponent(actual_item),
                type: 'GET',
                success: function(data) {
                    $('#chat-box').append('&lt;blockquote style="border-left: 4px solid #43a047;"&gt;Bot: ' + data.response + '&lt;/blockquote&gt;');
                    $('#progress-bar').hide();
                },
                error: function() {
                    $('#chat-box').append('&lt;blockquote style="border-left: 4px solid red;"&gt;Bot: Sorry, I am not able to respond at the moment.&lt;/blockquote&gt;');
                    $('#progress-bar').hide();
                }
            });
        }
    });
});
&lt;/script&gt;
</code></pre><h2 id="running-the-app">Running the App</h2><p>Duration: 2</p><ol><li>Open your web browser and go to <a href="http://localhost:8080"><code>http://localhost:8080</code></a>. You should see your chatbot interface.</li></ol><p>Run your application:</p><pre><code class="language-bash">python main.py
</code></pre><h2 id="interacting-with-your-chatbot">Interacting with Your Chatbot</h2><p>Duration: 2</p><ol><li>The bot will greet you asking you to guess what the bot is thinking about.</li><li>Enter a guess in the chat interface.</li><li>The chatbot will respond with if your guess was close to what the actual secret item it was thinking about!</li></ol><h2 id="conclusion">Conclusion</h2><p>Duration: 1</p><p>Congratulations! You've just built and deployed a simple chatbot using Flask and Google Cloud's Vertex AI. This bot plays a guessing game with the users!</p><h2 id="whats-next">What's Next?</h2><p>Duration: 1</p><ul><li>Experiment with different model parameters to see how they affect the output.</li><li>Try integrating this chatbot into a larger web application.</li><li>Explore other capabilities of Vertex AI.</li></ul>5:["$","div",null,{"className":"flex flex-col min-h-screen px-2 md:px-4 bg-background text-foreground","children":[["$","$L13",null,{"title":"Introduction to Building Solutions with PaLM2 API via VertexAI on GCP","closeBtn":true}],["$","main",null,{"className":"flex-grow w-full px-1","children":["$","div",null,{"className":"w-full py-2","children":["$","$L14",null,{"htmlContent":"$15","upperContent":"$undefined","bottomContent":"$undefined"}]}]}],["$","div",null,{"className":"w-full mx-auto py-6 max-w-6xl px-4 border-t border-border","children":["$","div",null,{"className":"flex flex-col sm:flex-row justify-between gap-2","children":[["$","div",null,{"className":"text-center sm:text-left text-foreground","children":["© Anubhav Singh ",2025]}],["$","div",null,{"className":"text-center sm:text-right","children":[["$","$L16",null,{"href":"/sitemap.xml","className":"text-foreground hover:text-blue-600 dark:hover:text-primary","children":"Sitemap"}],["$","span",null,{"className":"mx-1 text-foreground","children":"·"}],["$","$L16",null,{"href":"/newsletter","className":"text-foreground hover:text-blue-600 dark:hover:text-primary","children":"Newsletter"}]]}]]}]}],["$","$L17",null,{"id":"MathJax-script","src":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.0/es5/tex-mml-chtml.js","async":true}],["$","$L17",null,{"id":"MathJax-config","dangerouslySetInnerHTML":{"__html":"\n            MathJax = {\n              tex: {\n                inlineMath: [['((', '))']],\n                displayMath: [['[[', ']]']],\n              },\n              svg: {\n                fontCache: 'global'\n              }\n            };\n          "}}]]}]
12:{"metadata":[["$","title","0",{"children":"Introduction to Building Solutions with PaLM2 API via VertexAI on GCP"}],["$","meta","1",{"name":"description","content":"A starter guide to building innovative solutions with PaLM2 API via Vertex AI on GCP."}]],"error":null,"digest":"$undefined"}
c:{"metadata":"$12:metadata","error":null,"digest":"$undefined"}
