{"version":3,"file":"component---src-templates-blog-post-tsx-18fd82c0ee5861800b33.js","mappings":"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","sources":["webpack://gatsbyblog/./src/components/layout.tsx","webpack://gatsbyblog/./src/components/seo.tsx","webpack://gatsbyblog/./src/components/signup-form.tsx","webpack://gatsbyblog/./src/templates/blog/post.tsx","webpack://gatsbyblog/./src/utils/date.ts","webpack://gatsbyblog/./node_modules/prismjs/components/prism-go.min.js","webpack://gatsbyblog/./node_modules/react-cusdis/dist/ReactCusdis.js","webpack://gatsbyblog/./node_modules/react-cusdis/dist/useScript.js"],"sourcesContent":["import React, { ReactNode } from \"react\";\nimport \"../styles/global.css\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\n\ntype LayoutProps = {\n    children: ReactNode;\n};\n\nexport const Head = () => (\n    <>\n        <html lang=\"en\" />\n            <head>\n                <title>\n                    Anubhav Singh | xprilion&apos;s blog\n                </title>\n                <link rel=\"icon\" href={\"/favicon.ico\"} />\n                <link rel=\"shortcut icon\" type=\"image/x-icon\" href={\"/favicon.ico\"} />\n                <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={\"/favicon.png\"} />\n                <meta name=\"theme-color\" content=\"#7b46f6\" />\n        \n                <meta charSet=\"utf-8\" />\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        \n                <meta itemProp=\"name\" content=\"xprilion's blog\" />\n                <meta itemProp=\"description\" content={\"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes.\"} />\n                <meta itemProp=\"image\" content={\"/favicon.png\"} />\n                <meta name=\"description\" content={\"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes.\"} />\n                <meta property=\"og:title\" content={\"xprilion's blog\"} />\n                <meta property=\"og:description\" content={\"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes.\"} />\n                <meta property=\"og:image\" content={\"/favicon.png\"}/>\n                <meta property=\"og:type\" content=\"website\" />\n        \n                <meta name=\"twitter:card\" content=\"summary_large_image\" />\n                <meta name=\"twitter:site\" content=\"@xprilion\" />\n                <meta name=\"twitter:creator\" content=\"@xprilion\" />\n                <meta name=\"twitter:title\" content={\"xprilion's blog\"} />\n                <meta name=\"twitter:description\" content={\"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes.\"} />\n                <meta name=\"twitter:image\" content={\"/favicon.png\"} />\n            </head>\n    </>\n)\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n    return (\n        <div className=\"flex flex-col h-screen mx-auto px-4 lg:px-8 mx-w-full max-w-screen-xl\" >\n            <Header />\n            <hr className={\"hr-full\"} />\n            <main className={\"max-w-[stretch] lg:max-w-[800px] mx-auto\"}>\n                {children}\n            </main>\n            <br />\n            <hr className={\"hr-full\"} />\n            <Footer />\n        </div>\n    );\n};\n\nexport default Layout;\n","import React from \"react\";\n\nexport type PageData = {\n  id: string;\n  brief: string;\n  title: string;\n  subtitle: string;\n  url: string;\n  slug: string;\n  publishedAt: string;\n  coverImage: {\n      url: string;\n  };\n  content: {\n      html: string;\n  };\n  seo: {\n      title: string;\n      description: string;\n  };\n}\n\nexport const SEO = ({pageData} : {pageData: PageData}) => {\n  const {id, title, brief, url, slug, publishedAt, coverImage, content, seo} = pageData\n\n    return (\n      <>\n        <title>{title} | xprilion&apos;s blog</title>\n        <meta itemProp=\"name\" content={`${title} | xprilion's blog`}/>\n\n        <meta name=\"description\" content={brief}/>\n        <meta property=\"og:description\" content={brief}/>\n\n        <meta name=\"twitter:title\" content={`${title} | xprilion's blog`}/>\n        <meta name=\"twitter:description\" content={brief}/>\n\n        <meta property=\"image\" content={\"\" + \"/og/regular.jpg\"}/>\n        {/* <meta property=\"og:image\" content={url + \"/og/fb.jpg\"}/> */}\n\n        {/* {coverImage && <meta property=\"image\" content={coverImage.url}/>}\n        {coverImage && <meta property=\"og:image\" content={coverImage.url}/>}\n        {coverImage && <meta property=\"twitter:image\" content={coverImage.url}/>} */}\n      </>\n    );\n  }","import React from 'react'\nimport '../styles/signup-form.css'\n\nexport const SignupForm = () => {\n    const handleSubmit = () => {\n        window.open(\n            'https://newsletter.xprilion.com/subscription/form',\n            'popupwindow',\n            'scrollbars=yes,width=800,height=600'\n        )\n        return true\n    }\n\n    return (\n        <form\n            action={'https://newsletter.xprilion.com/subscription/form'}\n            method=\"post\"\n            target=\"popupwindow\"\n            onSubmit={handleSubmit}\n            className=\"SignupForm\"\n        >\n            <h3>Subscribe to my newsletter</h3>\n            <i>I often write about my experiences, sometimes tech, sometimes life</i>\n            <br />\n            <div className=\"flex flex-col md:flex-row overflow-hidden\">\n                <input\n                    className={\"mb-2 md:m-0\"}\n                    aria-label=\"Email address\"\n                    placeholder=\"john@example.com\"\n                    name=\"email\"\n                    type=\"email\"\n                    required\n                    id=\"tlemail\"\n                />\n                <input\n                    className={\"mb-2 md:ml-2 md:mb-0 md:mr-2\"}\n                    aria-label=\"Your name\"\n                    placeholder=\"John Doe\"\n                    name=\"name\"\n                    type=\"text\"\n                    required\n                    id=\"tlname\"\n                />\n                <input\n                    id=\"l-69f4cf24-c231-434c-be19-6d8899d60fbf\"\n                    type=\"hidden\"\n                    name=\"l\"\n                    value=\"69f4cf24-c231-434c-be19-6d8899d60fbf\"\n                />\n                <button type=\"submit\">Subscribe</button>\n            </div>\n        </form>\n    )\n}","import React, {useEffect} from \"react\";\nimport Layout from \"../../components/layout\";\nimport Prism from 'prismjs';\nimport {formatDate} from \"../../utils/date\";\nimport 'prismjs/themes/prism-tomorrow.css';\nimport 'prismjs/components/prism-bash.min.js';\nimport 'prismjs/components/prism-typescript.min.js';\nimport 'prismjs/components/prism-javascript.min.js';\nimport 'prismjs/components/prism-json.min.js';\nimport 'prismjs/components/prism-python.min.js';\nimport 'prismjs/components/prism-go.min.js';\nimport {ReactCusdis} from \"react-cusdis\";\nimport {SignupForm} from \"../../components/signup-form\";\nimport { SEO, PageData } from \"../../components/seo\";\n\n\nexport const Head = ({pageContext}: PostProps) => <SEO pageData={pageContext.node as PageData} />\n\n\nconst Post = ({pageContext}: PostProps) => {\n\n    const {id, title, brief, url, publishedAt, coverImage, content, seo} = pageContext.node\n\n    useEffect(() => {\n        Prism.highlightAll();\n        //@ts-ignore\n        if (window.MathJax) {\n          //@ts-ignore\n          window.MathJax.typeset()\n        }\n    }, [content]);\n\n    return (\n        <Layout>\n            <h1>{title}</h1>\n            <p style={{marginTop: \"-1rem\"}}><small>{formatDate(publishedAt)}</small></p>\n            {coverImage && <img src={`${coverImage.url}`} alt={title} loading={\"lazy\"} />}\n            <br/>\n            <div dangerouslySetInnerHTML={{__html: content.html}}/>\n            <br />\n            <SignupForm />\n            <br />\n            {\n                (seo?.title || id) && <ReactCusdis\n                    attrs={{\n                        host: 'https://cusdis.com',\n                        appId: 'e9bc0bcb-d463-4f63-8604-34e78a1ec232',\n                        pageId: seo?.title ? seo.title : id,\n                        pageTitle: title,\n                        pageUrl: url\n                    }}\n                />\n            }\n        </Layout>\n    );\n};\n\nexport default Post;\n","export const formatDate = (dateStr: string) => {\n    const date = new Date(dateStr);\n\n    const day = date.getDate();\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const month = monthNames[date.getMonth()];\n    const year = date.getFullYear();\n\n    return `${day} ${month}, ${year}`;\n}","Prism.languages.go=Prism.languages.extend(\"clike\",{string:{pattern:/(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,lookbehind:!0,greedy:!0},keyword:/\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,boolean:/\\b(?:_|false|iota|nil|true)\\b/,number:[/\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i,/\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,/(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],operator:/[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,builtin:/\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/}),Prism.languages.insertBefore(\"go\",\"string\",{char:{pattern:/'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,greedy:!0}}),delete Prism.languages.go[\"class-name\"];","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ReactCusdis = void 0;\nconst React = require(\"react\");\nconst useScript_1 = require(\"./useScript\");\nfunction ReactCusdis(props) {\n    const divRef = React.useRef(null);\n    const host = props.attrs.host || 'https://cusdis.com';\n    useScript_1.useScript(`${host}/js/cusdis.es.js`);\n    useScript_1.useScript(props.lang ? `${host}/js/widget/lang/${props.lang}.js` : '');\n    React.useLayoutEffect(() => {\n        // @ts-expect-error\n        const render = window.renderCusdis;\n        if (render) {\n            render(divRef.current);\n        }\n    }, [\n        props.attrs.appId,\n        props.attrs.host,\n        props.attrs.pageId,\n        props.attrs.pageTitle,\n        props.attrs.pageUrl,\n        props.lang\n    ]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { id: \"cusdis_thread\", \"data-host\": host, \"data-page-id\": props.attrs.pageId, \"data-app-id\": props.attrs.appId, \"data-page-title\": props.attrs.pageTitle, \"data-page-url\": props.attrs.pageUrl, \"data-theme\": props.attrs.theme, style: props.style, ref: divRef })));\n}\nexports.ReactCusdis = ReactCusdis;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useScript = void 0;\nconst React = require(\"react\");\nfunction useScript(src) {\n    // Keep track of script status (\"idle\", \"loading\", \"ready\", \"error\")\n    const [status, setStatus] = React.useState(src ? \"loading\" : \"idle\");\n    React.useEffect(() => {\n        // Allow falsy src value if waiting on other data needed for\n        // constructing the script URL passed to this hook.\n        if (!src) {\n            setStatus(\"idle\");\n            return;\n        }\n        // Fetch existing script element by src\n        // It may have been added by another intance of this hook\n        let script = document.querySelector(`script[src=\"${src}\"]`);\n        if (!script) {\n            // Create script\n            script = document.createElement(\"script\");\n            script.src = src;\n            script.async = true;\n            script.setAttribute(\"data-status\", \"loading\");\n            // Add script to document body\n            document.body.appendChild(script);\n            // Store status in attribute on script\n            // This can be read by other instances of this hook\n            const setAttributeFromEvent = (event) => {\n                script.setAttribute(\"data-status\", event.type === \"load\" ? \"ready\" : \"error\");\n            };\n            script.addEventListener(\"load\", setAttributeFromEvent);\n            script.addEventListener(\"error\", setAttributeFromEvent);\n        }\n        else {\n            // Grab existing script status from attribute and set to state.\n            // @ts-expect-error\n            setStatus(script.getAttribute(\"data-status\"));\n        }\n        // Script event handler to update status in state\n        // Note: Even if the script already exists we still need to add\n        // event handlers to update the state for *this* hook instance.\n        const setStateFromEvent = (event) => {\n            setStatus(event.type === \"load\" ? \"ready\" : \"error\");\n        };\n        // Add event listeners\n        script.addEventListener(\"load\", setStateFromEvent);\n        script.addEventListener(\"error\", setStateFromEvent);\n        // Remove event listeners on cleanup\n        return () => {\n            if (script) {\n                script.removeEventListener(\"load\", setStateFromEvent);\n                script.removeEventListener(\"error\", setStateFromEvent);\n            }\n        };\n    }, [src] // Only re-run effect if script src changes\n    );\n    return status;\n}\nexports.useScript = useScript;\n"],"names":["_ref","children","React","className","Header","Footer","SEO","pageData","id","title","brief","url","slug","publishedAt","coverImage","content","seo","itemProp","name","property","SignupForm","action","method","target","onSubmit","handleSubmit","window","open","placeholder","type","required","value","Head","pageContext","node","_ref2","useEffect","Prism","MathJax","typeset","Layout","style","marginTop","formatDate","src","alt","loading","dangerouslySetInnerHTML","__html","html","ReactCusdis","attrs","host","appId","pageId","pageTitle","pageUrl","dateStr","date","Date","getDate","getMonth","getFullYear","languages","go","extend","string","pattern","lookbehind","greedy","keyword","boolean","number","operator","builtin","insertBefore","char","exports","useScript_1","props","divRef","useRef","useScript","lang","useLayoutEffect","render","renderCusdis","current","createElement","Fragment","theme","ref","Object","defineProperty","status","setStatus","useState","script","document","querySelector","getAttribute","async","setAttribute","body","appendChild","setAttributeFromEvent","event","addEventListener","setStateFromEvent","removeEventListener"],"sourceRoot":""}