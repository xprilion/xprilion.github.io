{"version":3,"file":"component---src-templates-codelabs-index-tsx-1a1e1f6a2d8952476ce6.js","mappings":"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","sources":["webpack://gatsbyblog/./src/components/footer.tsx","webpack://gatsbyblog/./src/components/header.tsx","webpack://gatsbyblog/./src/components/layout.tsx","webpack://gatsbyblog/./src/components/signup-form.tsx","webpack://gatsbyblog/./src/templates/codelabs/index.tsx","webpack://gatsbyblog/./src/utils/date.ts"],"sourcesContent":["import React from \"react\";\nimport {Link} from \"gatsby\";\n\nexport default function Footer() {\nreturn (\n    <div className={\"w-full max-w-[800px] mx-auto py-8\"}>\n        <div className={\"flex justify-between\"}>\n            <div>&copy; Anubhav Singh {new Date().getFullYear()}</div>\n            <div>\n                <Link to={\"/sitemap.xml\"}>Sitemap</Link>&nbsp;&middot;&nbsp;\n                <Link to={\"/newsletter\"}>Newsletter</Link>\n            </div>\n        </div>\n    </div>\n)\n    }","import {Link} from \"gatsby\";\nimport React from \"react\";\n\nexport default function Header() {\n\n    const [menuOpen, setMenuOpen] = React.useState(false);\n\n    return (\n        <nav className={\"flex justify-between\"}>\n            <Link to={\"/\"}>\n                <h1 className=\"text-3xl text-black leading-normal mb-6 mt-0 inline-block\">xprilion's blog</h1>\n            </Link>\n            <div>\n                {/* Menu for large screens */}\n                <div className=\"hidden sm:flex\">\n                    <Link to=\"/posts\" className=\"m-1\">Posts</Link>\n                    <span className={\"my-1\"}>&nbsp;&middot;&nbsp;</span>\n                    <Link to=\"/talks\" className=\"m-1\">Talks</Link>\n                    <span className={\"my-1\"}>&nbsp;&middot;&nbsp;</span>\n                    <Link to=\"/publications\" className=\"m-1\">Publications</Link>\n                    <span className={\"my-1\"}>&nbsp;&middot;&nbsp;</span>\n                    <Link to=\"/codelabs\" className=\"m-1\">Codelabs</Link>\n                </div>\n\n                <button\n                    type=\"button\"\n                    className=\"flex items-center justify-center w-10 h-10 sm:hidden text-3xl rounded-full border-2 border-black\"\n                    onClick={() => setMenuOpen(!menuOpen)}\n                    style={{\n                        backgroundImage: \"url(/ellipses.png)\",\n                        backgroundSize: \"50%\",\n                        backgroundPosition: \"50%\",\n                        backgroundRepeat: \"no-repeat\"\n                    }}\n                >\n                </button>\n\n                {/* Collapsed menu for smaller screens */}\n                {menuOpen && (\n                    <div className=\"sm:hidden\" id={\"small-nav-menu\"}>\n                        <Link to=\"/posts\" className=\"m-1\">Posts</Link>\n                        <span className={\"my-1\"}>&nbsp;&middot;&nbsp;</span>\n                        <Link to=\"/talks\" className=\"m-1\">Talks</Link>\n                        <span className={\"my-1\"}>&nbsp;&middot;&nbsp;</span>\n                        <Link to=\"/publications\" className=\"m-1\">Publications</Link>\n                        <span className={\"my-1\"}>&nbsp;&middot;&nbsp;</span>\n                        <Link to=\"/codelabs\" className=\"m-1\">Codelabs</Link>\n                    </div>\n                )}\n            </div>\n        </nav>\n    )\n}","import React, { ReactNode } from \"react\";\nimport \"../styles/global.css\";\nimport Header from \"./header\";\nimport Footer from \"./footer\";\n\ntype LayoutProps = {\n    children: ReactNode;\n};\n\nexport const Head = () => (\n    <>\n        <html lang=\"en\" />\n        <title>\n            Anubhav Singh | xprilion&apos;s blog\n        </title>\n        <link rel=\"icon\" href={\"/favicon.ico\"} />\n        <link rel=\"shortcut icon\" type=\"image/x-icon\" href={\"/favicon.ico\"} />\n        <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={\"/favicon.png\"} />\n        <meta name=\"theme-color\" content=\"#7b46f6\" />\n\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n        <meta itemProp=\"name\" content=\"xprilion's blog\" />\n        <meta itemProp=\"description\" content={\"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes.\"} />\n        <meta itemProp=\"image\" content={\"/favicon.png\"} />\n        <meta name=\"description\" content={\"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes.\"} />\n        <meta property=\"og:title\" content={\"xprilion's blog\"} />\n        <meta property=\"og:description\" content={\"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes.\"} />\n        <meta property=\"og:image\" content={\"/favicon.png\"}/>\n        <meta property=\"og:type\" content=\"website\" />\n\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta name=\"twitter:site\" content=\"@xprilion\" />\n        <meta name=\"twitter:creator\" content=\"@xprilion\" />\n        <meta name=\"twitter:title\" content={\"xprilion's blog\"} />\n        <meta name=\"twitter:description\" content={\"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes.\"} />\n        <meta name=\"twitter:image\" content={\"/favicon.png\"} />\n    </>\n)\n\nconst Layout: React.FC<LayoutProps> = ({ children }) => {\n    return (\n        <div className=\"flex flex-col h-screen mx-auto p-4 lg:p-8 mx-w-full max-w-screen-xl\" >\n            <Header />\n            <hr className={\"hr-full\"} />\n            <main className={\"max-w-[stretch] lg:max-w-[800px] mx-auto\"}>\n                {children}\n            </main>\n            <br />\n            <hr className={\"hr-full\"} />\n            <Footer />\n        </div>\n    );\n};\n\nexport default Layout;\n","import React from 'react'\nimport '../styles/signup-form.css'\n\nexport const SignupForm = () => {\n    const handleSubmit = () => {\n        window.open(\n            'https://newsletter.xprilion.com/subscription/form',\n            'popupwindow',\n            'scrollbars=yes,width=800,height=600'\n        )\n        return true\n    }\n\n    return (\n        <form\n            action={'https://newsletter.xprilion.com/subscription/form'}\n            method=\"post\"\n            target=\"popupwindow\"\n            onSubmit={handleSubmit}\n            className=\"SignupForm\"\n        >\n            <h3>Subscribe to my newsletter</h3>\n            <i>I often write about my experiences, sometimes tech, sometimes life</i>\n            <br />\n            <div className=\"Wrapper\">\n                <input\n                    aria-label=\"Email address\"\n                    placeholder=\"john@example.com\"\n                    name=\"email\"\n                    type=\"email\"\n                    required\n                    id=\"tlemail\"\n                />\n                <input\n                    className={\"ml-2 mr-2\"}\n                    aria-label=\"Your name\"\n                    placeholder=\"John Doe\"\n                    name=\"name\"\n                    type=\"text\"\n                    required\n                    id=\"tlname\"\n                />\n                {/*<input type=\"hidden\" value=\"1\" name=\"embed\"/>*/}\n                <input\n                    id=\"l-69f4cf24-c231-434c-be19-6d8899d60fbf\"\n                    type=\"hidden\"\n                    name=\"l\"\n                    value=\"69f4cf24-c231-434c-be19-6d8899d60fbf\"\n                />\n                <button type=\"submit\">Subscribe</button>\n            </div>\n        </form>\n    )\n}","import * as React from \"react\"\nimport {PageProps, HeadFC, Link} from \"gatsby\";\nimport Layout from \"../../components/layout\";\nimport {formatDate} from \"../../utils/date\";\nimport {SignupForm} from \"../../components/signup-form\";\n\n\ninterface CodelabsPageProps {\n    labs: any\n}\n\nconst CodelabsIndex: React.FC<PageProps<{}, CodelabsPageProps>> = ({ pageContext }) => {\n\n    const { labs } = pageContext\n\n    return (\n        <Layout>\n            <ul className={\"p-0\"}>\n                {labs.map((post: any) => (\n                    <li style={{display: \"block\"}} key={post.node.slug}>\n                        <Link style={{boxShadow: `none`}} to={`/codelabs/${post.node.slug}`}>\n                            <h2 style={{marginBottom: `0.2rem`}}>\n                                {post.node.title.replace(\"Codelab::\", \"\")}\n                            </h2>\n                        </Link>\n                        <small>{formatDate(post.node.publishedAt)}</small>\n                        <p style={{marginTop: `0.5rem`}}>{post.node.subtitle}</p>\n                    </li>\n                ))}\n            </ul>\n            <br/>\n            <SignupForm/>\n            <br/>\n        </Layout>\n    )\n}\n\nexport const Head: HeadFC = () => <title>Codelabs | xprilion&apos;s blog</title>\n\nexport default CodelabsIndex","export const formatDate = (dateStr: string) => {\n    const date = new Date(dateStr);\n\n    const day = date.getDate();\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const month = monthNames[date.getMonth()];\n    const year = date.getFullYear();\n\n    return `${day} ${month}, ${year}`;\n}"],"names":["Footer","React","className","Date","getFullYear","Link","to","Header","menuOpen","setMenuOpen","type","onClick","style","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","id","_ref","children","SignupForm","action","method","target","onSubmit","handleSubmit","window","open","placeholder","name","required","value","Head","pageContext","labs","Layout","map","post","display","key","node","slug","boxShadow","marginBottom","title","replace","formatDate","publishedAt","marginTop","subtitle","dateStr","date","getDate","getMonth"],"sourceRoot":""}