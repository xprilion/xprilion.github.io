1:"$Sreact.fragment"
2:I[6575,["177","static/chunks/app/layout-03b28790fff4d2e4.js"],"ThemeProvider"]
3:I[4922,[],""]
4:I[3720,[],""]
5:I[3369,["177","static/chunks/app/layout-03b28790fff4d2e4.js"],"GoogleAnalytics"]
7:I[2466,[],"MetadataBoundary"]
9:I[2466,[],"OutletBoundary"]
c:I[6114,[],"AsyncMetadataOutlet"]
e:I[2466,[],"ViewportBoundary"]
10:I[4797,[],""]
:HL["/_next/static/media/22966f4f11fece13-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/3df4cf0b22f61940-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/a481f011d1f4a14b-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/feff4f1fc62fae3c-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/5d465971106e06ba.css","style"]
:HL["/_next/static/css/2dba37557e579c7e.css","style"]
:HL["/_next/static/css/f3b8208e8dab82f4.css","style"]
0:{"P":null,"b":"8NeNt-6z7kYm6d_0EEedd","p":"","c":["","python-amazon-keyspaces-cassandra"],"i":false,"f":[[["",{"children":["(blog)",{"children":[["slug","python-amazon-keyspaces-cassandra","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/5d465971106e06ba.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/2dba37557e579c7e.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","className":"__variable_6ab973","suppressHydrationWarning":true,"children":[["$","head",null,{"children":[["$","link",null,{"rel":"icon","type":"image/png","href":"/apple-icon.png","sizes":"96x96"}],["$","link",null,{"rel":"icon","type":"image/svg+xml","href":"/icon0.svg"}],["$","link",null,{"rel":"shortcut icon","href":"/favicon.ico"}],["$","link",null,{"rel":"apple-touch-icon","sizes":"180x180","href":"/apple-touch-icon.png"}],["$","meta",null,{"name":"apple-mobile-web-app-title","content":"xprilion's blog"}],["$","link",null,{"rel":"manifest","href":"/manifest.json"}],["$","meta",null,{"name":"theme-color","content":"#7b46f6"}],["$","meta",null,{"charSet":"utf-8"}],["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta",null,{"itemProp":"name","content":"xprilion's blog"}],["$","meta",null,{"itemProp":"description","content":"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes."}],["$","meta",null,{"itemProp":"image","content":"/favicon.png"}],["$","meta",null,{"property":"og:title","content":"xprilion's blog"}],["$","meta",null,{"property":"og:description","content":"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes."}],["$","meta",null,{"property":"og:image","content":"/favicon.png"}],["$","meta",null,{"property":"og:type","content":"website"}],["$","meta",null,{"name":"twitter:card","content":"summary_large_image"}],["$","meta",null,{"name":"twitter:site","content":"@xprilion"}],["$","meta",null,{"name":"twitter:creator","content":"@xprilion"}],["$","meta",null,{"name":"twitter:title","content":"xprilion's blog"}],["$","meta",null,{"name":"twitter:description","content":"Hey, I'm Anubhav Singh. I love building software, mixing stacks and making memes."}],["$","meta",null,{"name":"twitter:image","content":"/favicon.png"}]]}],["$","body",null,{"className":"antialiased","children":["$","$L2",null,{"attribute":"class","defaultTheme":"system","enableSystem":true,"disableTransitionOnChange":true,"children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}],["$","$L5",null,{"gaId":"G-NKJL65V2YL"}]]}]]}],{"children":["(blog)",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$0:f:0:1:1:props:children:1:props:children:1:props:children:props:children:props:notFound:0:1:props:style","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$0:f:0:1:1:props:children:1:props:children:1:props:children:props:children:props:notFound:0:1:props:children:props:children:1:props:style","children":404}],["$","div",null,{"style":"$0:f:0:1:1:props:children:1:props:children:1:props:children:props:children:props:notFound:0:1:props:children:props:children:2:props:style","children":["$","h2",null,{"style":"$0:f:0:1:1:props:children:1:props:children:1:props:children:props:children:props:notFound:0:1:props:children:props:children:2:props:children:props:style","children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["slug","python-amazon-keyspaces-cassandra","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L6",["$","$L7",null,{"children":"$L8"}],[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/f3b8208e8dab82f4.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","$L9",null,{"children":["$La","$Lb",["$","$Lc",null,{"promise":"$@d"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","g0qtjhv08dyP8WQmcXkhU",{"children":[["$","$Le",null,{"children":"$Lf"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],null]}],false]],"m":"$undefined","G":["$10","$undefined"],"s":false,"S":true}
11:"$Sreact.suspense"
12:I[6114,[],"AsyncMetadata"]
8:["$","$11",null,{"fallback":null,"children":["$","$L12",null,{"promise":"$@13"}]}]
b:null
f:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
a:null
14:I[1701,["943","static/chunks/943-eb5c9570e2ea5452.js","981","static/chunks/981-982ff48b33ef9837.js","224","static/chunks/224-ed8f8dcad199b1cb.js","356","static/chunks/app/(blog)/%5Bslug%5D/page-f945c0378016101e.js"],"default"]
15:I[1999,["943","static/chunks/943-eb5c9570e2ea5452.js","981","static/chunks/981-982ff48b33ef9837.js","224","static/chunks/224-ed8f8dcad199b1cb.js","356","static/chunks/app/(blog)/%5Bslug%5D/page-f945c0378016101e.js"],""]
16:I[1106,["943","static/chunks/943-eb5c9570e2ea5452.js","981","static/chunks/981-982ff48b33ef9837.js","224","static/chunks/224-ed8f8dcad199b1cb.js","356","static/chunks/app/(blog)/%5Bslug%5D/page-f945c0378016101e.js"],"default"]
18:I[4046,["943","static/chunks/943-eb5c9570e2ea5452.js","981","static/chunks/981-982ff48b33ef9837.js","224","static/chunks/224-ed8f8dcad199b1cb.js","356","static/chunks/app/(blog)/%5Bslug%5D/page-f945c0378016101e.js"],""]
17:T273f,<p><a href="https://cassandra.apache.org/doc/latest/">Cassandra</a> is a popular NoSQL database with capabilities to handle massive data by using a distributed array of commodity hardware. After a boring introduction, here's the fun part - Cassandra is a Facebook contribution to the world of Open Source, having been developed to handle the inbox search feature in Facebook almost a decade ago, and since it has been handed over to the <a href="https://www.apache.org/">Apache Software Foundation</a>, it has been among the top open source projects under the organization.</p><p>Cassandra powers the highly intensive queries in the applications of several major tech players - Instagram, Netflix, Facebook (before replacing it with HBase and further HBase with MyRocks), Twitter (before replacing it with in-house Manhattan), Walmart Labs, CERN, Cisco WebEx, and many more. You can read an extensive praise-o-logy of Cassandra on this <a href="https://ubuntu.com/blog/apache-cassandra-top-benefits">Ubuntu blog titled What is Cassandra and why are big tech companies using it?</a></p><p>While it can be a hassle to install and maintain a Cassandra database server online, <a href="https://aws.amazon.com/keyspaces/">Amazon Keyspaces</a> offering by Amazon Web Services makes it a no-brainer to use. A similar powerful offering is provided by Datastax by the name <a href="https://www.datastax.com/products/datastax-astra">Astra</a>. Both provide a managed service for Cassandra database which you can readily use both for development and production needs. Big plus - you can try both for free!</p><p>In this tutorial, I shall be moving ahead with Amazon Keyspaces, considering the dearth of a complete example of how to use it on the Internet. You can very easily modify it to work with Datastax Astra.</p><p>First off, before we make any queries, head over to the <a href="https://console.aws.amazon.com/keyspaces/home">Amazon Keyspaces dashboard</a> and create a Keyspace and a sample Table using the Dashboard or the CQL Editor. Both actions being fairly simple, I shall leave it up to you to <a href="https://docs.aws.amazon.com/keyspaces/latest/devguide/getting-started.ddl.html">explore how to get it done</a>. Let's move ahead with how you can use them with a Python application.</p><p>For convenience, I shall assume that the keyspace you created is named <code>test_keyspace</code> and the table is named <code>users</code>. The definition for <code>users</code> table is expected to be -</p>
<!--kg-card-begin: html-->
<table>
<thead>
<tr>
<th>Column</th>
<th>Type</th>
</tr>
</thead>
<tbody>
<tr>
<td>id</td>
<td>uuid</td>
</tr>
<tr>
<td>name</td>
<td>varchar</td>
</tr>
<tr>
<td>age</td>
<td>integer</td>
</tr>
<tr>
<td>city</td>
<td>varchar</td>
</tr>
</tbody>
</table>
<!--kg-card-end: html-->
<p>You'll need to download a <a href="https://www.comodo.com/resources/small-business/digital-certificates.php">Digital Certificate</a> provided by Amazon to be able to connect to Keyspaces since the service only connects through TLS. To do so, use the following command in a terminal window -</p><pre><code class="language-bash">curl https://www.amazontrust.com/repository/AmazonRootCA1.pem -O
</code></pre><p>Create a new folder in your working directory named <code>.cassandra</code> and move the <code>AmazonRootCA1.pem</code> file there. Just cleaning up the working space, tbh, you can keep it wherever you wish, as long as its accessible to your Python script.</p><p>Next, we shall need the <code>cassandra-driver</code> library for quick functionality to use Cassandra with Python. Run the following command to install it -</p><pre><code class="language-bash">pip install cassandra-driver
</code></pre><p>Now, we shall write a small barebones wrapper object for our connection with Amazon Keyspaces. Create a file called <a href="http://db.py"><code>db.py</code></a> in your working directory.</p><p>Add the following code to make all necessary imports -</p><pre><code class="language-python">from cassandra.auth import PlainTextAuthProvider
from cassandra.cluster import Cluster
from ssl import SSLContext, PROTOCOL_TLSv1_2, CERT_REQUIRED
from cassandra import ConsistencyLevel
from cassandra.query import SimpleStatement
</code></pre><p>The above imports indicate a few things -</p><ul><ol><li>We're going to be using the <code>PlainTextAuthProvider</code> which means at some point we'll need a username and password combination for our connection with the database. We shall come around this.</li></ol><ol><li><code>Cluster</code> indicates that we shall be creating an object of the Cassandra Cluster we connect to. This provides cluster level operations which can be useful for you, but not much in the course of this tutorial.</li></ol><ol><li><code>SSLContext, PROTOCOL_TLSv1_2, CERT_REQUIRED</code> are all required for making a TLS connection to the Amazon Keyspaces service.</li></ol><ol><li><code>ConsistencyLevel</code> if this is a bouncer, we shall get to overcoming it further down in this tutorial.</li></ol><ol><li><code>SimpleStatement</code> is a simple CSQL statement, no wonders here.</li></ol></ul><p>Next, let's begin using these imports.</p><p>Create a class <code>Cassandra</code> and add an initialization constructor which creates and connection to the database service -</p><pre><code class="language-python">class Cassandra:
    def __init__(self):
        ssl_context = SSLContext(PROTOCOL_TLSv1_2)
        ssl_context.load_verify_locations('.cassandra/AmazonRootCA1.pem')
        ssl_context.verify_mode = CERT_REQUIRED
        auth_provider = PlainTextAuthProvider(
            username='ServiceUsername',
            password='ServicePassword')
        self.cluster = Cluster(
            ['cassandra.us-east-1.amazonaws.com'],
            ssl_context=ssl_context,
            auth_provider=auth_provider,
            port=9142)
        self.session = self.cluster.connect("test_keyspace")
</code></pre><p>Notice <code>ServiceUsername</code> and <code>ServicePassword</code>, you do not yet have them. To create a pair of credentials to use, follow this instructions in <a href="https://docs.aws.amazon.com/keyspaces/latest/devguide/programmatic.credentials.html#programmatic.credentials.ssc">this tutorial</a>.</p><p>Your Cluster endpoint (<a href="http://cassandra.us-east-1.amazonaws.com"><code>cassandra.us-east-1.amazonaws.com</code></a>) could differ from the one I have used in my example. You can find out your endpoint by visiting <a href="https://docs.aws.amazon.com/keyspaces/latest/devguide/programmatic.endpoints.html">this list</a> and use the endpoint corresponding to your AWS Region.</p><p>Now, let's create a method for the <code>Cassandra</code> class that we can use to execute queries -</p><pre><code class="language-python">class Cassandra:
    ...
    def execute(self, query):
            return self.session.execute(SimpleStatement(
                query, consistency_level=ConsistencyLevel.LOCAL_QUORUM))
</code></pre><p>Look, we used the <code>ConsistencyLevel</code> object here! What is this bird?</p><figure class="kg-card kg-image-card"><img loading="lazy" src="https://digitalpress.fra1.cdn.digitaloceanspaces.com/4ml9m8u/2025/04/image-14.png" class="kg-image" alt="" loading="lazy" width="575" height="323"></figure><p><strong>Consistency Level</strong> is the number of nodes which need to confirm that a particular write operation into a Cassandra database is successful. In simpler words, since Cassandra is a distributed database, and the data stored in Cassandra is split over multiple nodes, a single write operation is successful only when maximum possible nodes acknowledge the write operation as valid. For this, we use different consistency levels, some of which are - <code>LOCAL_ONE</code>, <code>LOCAL_QUORUM</code>, <code>ALL</code>, etc. You can read more about consistency levels in <a href="https://www.geeksforgeeks.org/consistency-levels-in-cassandra/">this blog by Ashish Rana on GeeksforGeeks</a>.</p><p>Currently, Amazon Keyspaces works only with the <code>LOCAL_QUORUM</code> consistency level.</p><p>Now, we can delve into some action!</p><p>Create a new file called <a href="http://main.py"><code>main.py</code></a> (or whatever fancy wording you can think of in 1 second), and put the following lines in it to try inserting a new entry to the database -</p><pre><code class="language-python">from db import Cassandra

csql = Cassandra()

# Insert Query
results = csql.execute("INSERT INTO users (id, name, age, city) \
                        VALUES (6ab09bec-e68e-48d9-a5f8-97e6fb4c9b47, \
                       'John', 24, 'Delhi')")
</code></pre><p>Now, save the file and try executing it from the terminal using the following command -</p><pre><code class="language-bash">python main.py
</code></pre><p>If the query is successful, you shall see no errors.</p><p>Let's try reading the database and see if we've got the entry right. Comment out the Insert query code in the <a href="http://main.py"><code>main.py</code></a> file and add the following lines -</p><pre><code class="language-python"># Read query
results = csql.execute("SELECT * FROM users")
print([x for x in results])
</code></pre><p>You should see the output similar to this -</p><pre><code class="language-text">[Row(id=UUID('6ab09bec-e68e-48d9-a5f8-97e6fb4c9b47'), city='Delhi', age=24, name='John')]
</code></pre><p>If not, you need to observe the error message and try fixing the code! You can find the full code for this tutorial at - <a href="https://github.com/xprilion/python-amazon-keyspaces">https://github.com/xprilion/python-amazon-keyspaces</a></p><p>Cassandra can be a great tool if you're looking to build highly scalable and mission-critical applications (given you need something like Cassandra, at all) and Amazon Keyspaces makes it very simple and efficient to use and manage.</p><p>It is possible to use Amazon Keyspaces with other backends as well, and I shall leave it for you to explore them at your interest.</p><p>Thanks for reading this!</p>6:["$","$L14",null,{"children":[["$","div",null,{"className":"mb-6","children":[["$","$L15",null,{"href":"/posts","className":"text-blue-600 hover:underline mb-4 block","children":"← Back to all posts"}],["$","h1",null,{"className":"text-2xl md:text-3xl font-bold mb-2","children":"Working with Amazon Keyspaces Cassandra distribution using Python"}],["$","p",null,{"className":"text-gray-600 dark:text-gray-200 text-sm ","children":"16 September, 2020"}]]}],null,["$","$L16",null,{"html":"$17","slug":"python-amazon-keyspaces-cassandra","title":"Working with Amazon Keyspaces Cassandra distribution using Python"}],["$","$L18",null,{"id":"MathJax-script","src":"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.0/es5/tex-mml-chtml.js","async":true,"strategy":"afterInteractive"}],["$","$L18",null,{"id":"MathJax-config","strategy":"beforeInteractive","dangerouslySetInnerHTML":{"__html":"\n          MathJax = {\n            tex: {\n              inlineMath: [['((', '))']],\n              displayMath: [['[[', ']]']],\n            },\n            svg: {\n              fontCache: 'global'\n            }\n          };\n        "}}]]}]
13:{"metadata":[["$","title","0",{"children":"Working with Amazon Keyspaces Cassandra distribution using Python"}],["$","meta","1",{"name":"description","content":"Cassandra is a popular NoSQL database with capabilities to handle massive data by using a distributed array of commodity hardware. After a boring introduction, here's the fun part - Cassandra is a Facebook contribution to the world of Open Source, having been developed to handle the inbox search feature in Facebook almost a decade ago, and since it has been handed over to the Apache Software Foundation, it has been among the top open source projects under the organization.\n\nCassandra powers the "}],["$","link","2",{"rel":"icon","href":"/logo.jpg"}]],"error":null,"digest":"$undefined"}
d:{"metadata":"$13:metadata","error":null,"digest":"$undefined"}
